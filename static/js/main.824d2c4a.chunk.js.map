{"version":3,"sources":["assets/logo.png","assets/ball-1.png","components/Container/Header.tsx","assets/Heart1.png","components/Container/Categories.tsx","components/Container/PokemonCart.tsx","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["Header","burger","setBurger","className","src","ball","alt","logo","onClick","Categories","setFilter","setFavoritesVisible","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","heart","PokemonCart","id","name","type","image","deepState","favor","setShowHeartDescr","setMobile","SelectItems","pokemonsList","filter","favorites","favoritesVisible","mobile","q","setQ","searchParam","htmlFor","placeholder","value","onChange","e","target","length","map","pokemon","index","types","abilities","ability","some","newItem","toString","toLowerCase","indexOf","search","sprites","other","dream_world","front_default","PokemonDescription","abilityDescr","showHeartDescr","allDescr","params","currentList","todos","JSON","parse","localStorage","getItem","forEach","item","splice","addOrDeleteFavor","View","myState","pokiDescription","abildesr","effect","useLocalStorage","key","initialValue","window","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setMyState","setFavorites","App","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","results","fetch","res","json","data","resAbility","dataAbility","dataAbilityDescr","effect_entries","currenList","next","sort","b","useEffect","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.824d2c4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nexport const Header: React.FC<{\n  burger: boolean\n  setBurger: (burger: boolean) => void\n}> = ({burger,setBurger}) => {\n \n\n  return (\n    \n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img src={logo} alt=\"pokemon\" />\n      </div>\n      \n        <div className = \"burger-menu\" onClick = {() =>{setBurger(!burger)}}>\n          <span></span>\n        </div>\n      \n  \n    </div>\n    \n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const Categories:React.FC<{\n\n  setFilter: (param:string) => void\n  setFavoritesVisible: (p:boolean) => void\n  burger: boolean\n  \n}> = ({ setFilter, setFavoritesVisible ,burger}) => {\n  const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n  const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n  return (\n    <div className={burger ? \"categories active\" : \"categories\"}>\n      <div\n        className=\"categories-favorites__wrapper\"\n        onClick={() => {\n          setFavoritesVisible(true)\n        }}\n      >\n        <img className=\"categories-img\" src={heart} alt=\"heart\" />\n        <div className=\"categories-favorites\">Избранное</div>\n      </div>\n\n      <div className=\"title\">Категории</div>\n\n      <ul className=\"categoriesList\">\n        <li onClick={() => {\n          setFilter('All')\n          setFavoritesVisible( false)\n        }\n          }>Все покемоны</li>\n        <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n          Классы\n          {visibleAbilites && (\n            <ul>\n              <li\n                onClick={() => {\n                  setFilter('grass')\n                  setFavoritesVisible( false)\n                }}\n              >\n                Grass\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('normal')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Normal\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('fire')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Fire\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('water')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Water\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('bug')\n                  setFavoritesVisible( false)\n                }}\n              >\n                Bug\n              </li>\n            </ul>\n          )}\n        </li>\n        <li onClick={() => setVisibleClass(!visibleClass)}>\n          Cпособности\n          {visibleClass && (\n            <ul>\n              <li\n                onClick={() => {\n                  setFilter('overgrow')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Overgroth\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('blaze')\n                  setFavoritesVisible( false)\n                }}\n              >\n                Blaze\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('shield-dust')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Shield-dust\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('shed-skin')\n                  setFavoritesVisible( false)\n                }}\n              >\n                Shed-skin\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('compound-eyes')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Compound-eyes\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('swarm')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Swarm\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('keen-eye')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Keen-eye\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('run-away')\n                  setFavoritesVisible(false)\n                }}\n              >\n                Run-away\n              </li>\n              <li\n                onClick={() => {\n                  setFilter('torrent')\n                  setFavoritesVisible( false)\n                }}\n              >\n                Torrent\n              </li>\n            </ul>\n          )}\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Categories\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const PokemonCart: React.FC<{\n    id: number\n    name: string\n    type: string\n    image: string\n    deepState:(param: number) => void\n    favor: boolean\n    setShowHeartDescr: (param: boolean) => void \n    setMobile: (param:boolean)=> void\n   \n}> = ({id,name,type,image,deepState,favor,setShowHeartDescr,setMobile}) => (\n\n  \n        <button className= \"pokemon-cart\" onClick = {() => {\n            \n            deepState(id);\n            setMobile(true);\n            if(favor) {\n                setShowHeartDescr(false);\n            } else {\n                setShowHeartDescr(true);\n            }\n          \n        }}>\n           <div><span>№{id}</span></div>\n           <div ><img src={image} alt=\"pokemon\" /></div>\n            <div>\n                <strong className = \"pokemon-cart__name\"> {name}</strong>\n                \n            </div>\n            \n           <div>Class: {type}</div>\n               {favor && <div className = \"pokemon-cart__heart \"  ><img src={heart} alt=\"like\" / ></div>}\n              \n        </button>\n            \n    \n)\n\nexport default PokemonCart\n","import React from 'react'\nimport PokemonCart from './PokemonCart'\n\nimport {IPoki,IPokiFavor} from \"../../interface\";\n\n\nexport const SelectItems:React.FC<{\n  pokemonsList:IPoki[]\n  deepState: (param: number) => void\n  filter:string\n  favorites: IPokiFavor[]\n  favoritesVisible: boolean\n  setShowHeartDescr: (param:boolean) => void\n  setMobile: (param:boolean)=> void\n  mobile:boolean\n}>  = ({ pokemonsList, deepState, filter,favorites,favoritesVisible,setShowHeartDescr,setMobile,mobile}) => {\n  const [q, setQ] = React.useState('') // это для поискового запроса\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  function search(pokemonsList:IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList:any) => {\n      if (\n        pokemonsList.types[0].type.name === filter ||\n        pokemonsList.abilities[0].ability.name === filter\n      ) {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      } else if (filter === 'All') {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      }})}\n\n      function renderFavorOrItems() {\n\n        if(favoritesVisible) {\n            if(favorites.length > 0) {\n            return favorites.map((pokemon:IPokiFavor,index:number) => (\n              <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.image}\n              type={pokemon.type}\n              key={index}\n              deepState={deepState}\n              favor={pokemon.favor}\n              setShowHeartDescr  = {setShowHeartDescr}\n              setMobile = {setMobile}\n           \n            />\n            ))\n            } else { return <div> У вас тут пусто :(</div>}\n        } else {\n          return search(pokemonsList).map((pokemon:IPoki,index:number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              deepState={deepState}\n              favor={pokemon.favor}\n              setShowHeartDescr  = {setShowHeartDescr }\n              setMobile = {setMobile}\n             \n            />\n          ))\n        }\n      }\n  \n\n\n  return (\n    <div className={mobile? \"selectItems mobile\" : \"selectItems\"} >\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {renderFavorOrItems()}\n    </div>\n  )\n}\n\nexport default SelectItems\n","\nimport React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {IPoki} from \"../../interface\";\n\nexport const PokemonDescription:React.FC<{\n  id: number\n  name: string\n  image:string\n  type: string\n  ability: string\n  abilityDescr:string\n  favorites: (param:any) => void \n  showHeartDescr: boolean\n  setShowHeartDescr: (param:boolean) => void\n  allDescr: IPoki\n  mobile: boolean\n  setMobile:(param:boolean) => void\n\n\n}> = ({id,name,image,type,ability,abilityDescr,favorites,showHeartDescr,setShowHeartDescr,allDescr,mobile,setMobile}) =>{\n\n    \n  \n  function addOrDeleteFavor(params:boolean) {\n    if(params) {\n      favorites((currentList:[{}])=> [...currentList , {id: id ,name: name, image: image, type:type , favor: true}]);\n      setShowHeartDescr(!params)\n    } else {\n      const todos = JSON.parse(localStorage.getItem('poki')!);\n      \n      todos.forEach((item:IPoki,index:number) => {\n        if(item.id === id )  {\n          todos.splice(index,1);\n        }\n      })\n      favorites(todos);\n      setShowHeartDescr(!params);\n      allDescr.favor = false;\n    } \n  }\n \n  \n    return (\n      <div>\n       <div className ={mobile? \"view-description__mobile\" : \"view-description\"}>\n        <div className = \"view-description__name\">{name}</div> \n        <div className = \"view-description__image\"><img src={image} alt=\"\" /></div>\n        <div className = \"view-description__type\">Class:{type}</div>\n        <div className = \"view-description__ability\">Ability: <span>{ability}</span></div>\n        <div className = \"view-description__abilityDescr\"> {abilityDescr}</div>\n       \n        <div className = \"view-description__heart\" >\n\n            \n          <div onClick = {() => addOrDeleteFavor(showHeartDescr) }>\n            {<img className ={allDescr.favor ? \"view-description__heart--active\":\"view-description__heart--noactive\" } src={heart} alt=\"heart\" onClick = {() => { allDescr.favor = true} }  />} \n          </div>\n          <div className = \"view-description__back\"><span onClick = {() => {setMobile(false)}}>Назад</span></div>\n          </div>\n       </div>\n      \n      </div>\n    )\n}\n\nexport default PokemonDescription\n","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\n\nimport {IPoki} from \"../../interface\";\n\nexport const View: React.FC<{\n  myState:any\n  pokiDescription:IPoki\n  favorites: ()=> void\n  showHeartDescr:boolean\n  setShowHeartDescr: (param:boolean) => void\n  mobile: boolean\n  setMobile: (param:boolean) => void\n\n}> =({myState,pokiDescription,favorites,showHeartDescr,setShowHeartDescr,mobile,setMobile}) => {\n\n \n  return (\n    <div  className = \"view\" >\n     { myState &&\n        <PokemonDescription  \n        favorites = {favorites}  \n        allDescr = {pokiDescription}\n        ability = {pokiDescription.abilities[0].ability.name}\n        abilityDescr = {pokiDescription.abildesr[1].effect}\n        id = {pokiDescription.id}\n        name = {pokiDescription.name}\n        image = {pokiDescription.sprites.other.dream_world.front_default}\n        type = {pokiDescription.types[0].type.name}\n        showHeartDescr = {showHeartDescr}\n        setShowHeartDescr = {setShowHeartDescr}\n        mobile = {mobile}\n        setMobile = {setMobile}\n        />\n     } \n    </div>\n  )\n\n}\n\nexport default View\n","import { useState } from 'react';\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: any,\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, {useState} from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from \"./useLocalStorage\"\n\nimport {IPoki} from \"../../interface\";\n\n\n\nexport const Container:React.FC<{\n  pokemonsList: IPoki[]\n}> = ({ pokemonsList }) => {\n\n \n\n  const [myState, setMyState] = useState<any>()\n  const [filter, setFilter] = useState('All')\n\n  const [mobile,setMobile] = useState(false)\n\n  const [favoritesVisible,setFavoritesVisible] = useState(false);\n\n  const [favorites, setFavorites] = useLocalStorage(\"poki\",[]);\n\n  const [showHeartDescr,setShowHeartDescr] = useState(true);\n  const [burger,setBurger] = useState(false);\n\n\n\n\n\n\n  return (\n    <div className=\"container\">\n      <Header  burger = {burger} setBurger = {setBurger}/>\n      <div className=\"wrapper\">\n        <Categories \n          setFilter={setFilter}\n          setFavoritesVisible = {setFavoritesVisible}\n          burger = {burger} \n        \n        />\n        <SelectItems\n          pokemonsList={pokemonsList}\n          deepState={setMyState}\n          filter={filter}\n          favorites = {favorites}\n          favoritesVisible = {favoritesVisible}\n          setShowHeartDescr = {setShowHeartDescr}\n          setMobile = {setMobile}\n          mobile = {mobile}\n        />\n        <View\n          myState={myState}\n          pokiDescription={pokemonsList[myState - 1]}\n          favorites = {setFavorites}\n          showHeartDescr = {showHeartDescr}\n          setShowHeartDescr = {setShowHeartDescr}\n          mobile = {mobile}\n          setMobile = {setMobile}\n        />\n\n         \n\n        \n      \n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React, {useEffect,useState} from 'react'\nimport Container from '../Container/Container'\n\nimport {IPoki} from \"../../interface\";\n\n\n\n\nexport const App:React.FC = () => {\n\n  const [allPokemons, setAllPokemons] = useState<IPoki[]>([]);\n  const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20');\n\n  const getAllPokemons = async () => {\n    const res = await fetch(loadMore);\n    const data = await res.json();\n\n    setLoadMore(data.next);\n\n    async function createPokemonObject(results:IPoki[]) {\n      results.forEach(async pokemon => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\n        const data = await res.json();\n\n        const resAbility = await fetch(\n          `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`,\n        );\n        const dataAbility = await resAbility.json();\n        const dataAbilityDescr = dataAbility.effect_entries;\n\n        data.abildesr = dataAbilityDescr;\n\n        setAllPokemons(currenList => [...currenList, data]);\n      });\n    }\n    \n    createPokemonObject(data.results);\n    \n  };\n\n \n  allPokemons.sort((a, b) => a.id - b.id);\n\n  useEffect(() => {\n    getAllPokemons();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!);\n    let favorPoki:number[] = [];\n\n    if (a) {\n      a.forEach((item:any, index:number) => {\n        favorPoki[index] = item.id;\n      });\n\n      allPokemons.forEach(item => {\n        if (favorPoki.includes(item.id)) {\n          item.favor = true;\n        }\n      });\n    }\n  }\n \n  checkFavorPoki();\n \n\n  return (\n    <div className=\"App\">\n      <Container pokemonsList={allPokemons} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}