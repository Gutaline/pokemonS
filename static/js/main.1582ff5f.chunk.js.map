{"version":3,"sources":["assets/logo.png","assets/ball-1.png","components/Container/Header.tsx","assets/Heart1.png","components/Container/Categories.tsx","components/Container/PokemonCart.tsx","store/allPoki.js","assets/loader.svg","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["Header","burger","setBurger","className","src","ball","alt","logo","onClick","window","location","reload","Categories","setMobile","setFilter","setFavoritesVisible","itemClass","itemAbility","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","heart","map","ability","index","PokemonCart","id","name","type","image","deepState","favor","setShowHeartDescr","api","count","makeAutoObservable","this","createPokemonObject","a","results","forEach","pokemon","fetch","res","json","data","abilities","resAbility","dataAbility","dataAbilityDescr","effect_entries","abildesr","runInAction","sort","b","next","call","SelectItems","pokemonsList","filter","favorites","favoritesVisible","mobile","q","setQ","searchParam","pageEnd","useRef","search","types","some","newItem","toString","toLowerCase","indexOf","useEffect","IntersectionObserver","entries","isIntersecting","allPoki","getPoki","console","log","threshold","observe","current","htmlFor","placeholder","value","onChange","e","target","length","sprites","other","dream_world","front_default","loader","ref","PokemonDescription","abilityDescr","showHeartDescr","allDescr","params","currentList","todos","JSON","parse","localStorage","getItem","item","splice","addOrDeleteFavor","View","myState","pokiDescription","effect","useLocalStorage","key","initialValue","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setMyState","setFavorites","App","observer","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oLAAe,MAA0B,iCCA1B,MAA0B,mC,OC6B1BA,EAtBV,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UACd,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKC,EAAMC,IAAI,WAEtB,qBAAKH,UAAU,uBAAf,SACE,qBAAKC,IAAKG,EAAMD,IAAI,UAASE,QAAS,kBAAMC,OAAOC,SAASC,cAG9D,qBACER,UAAU,cACVK,QAAS,WACPN,GAAWD,IAHf,SAME,+BCvBO,MAA0B,mCCiG1BW,EAtFV,SAAC,GAQC,IAPLC,EAOI,EAPJA,UACAX,EAMI,EANJA,UACAY,EAKI,EALJA,UACAC,EAII,EAJJA,oBACAd,EAGI,EAHJA,OACAe,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,EAA8CC,IAAMC,UAAS,GAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCH,IAAMC,UAAS,GAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKpB,UAAWF,EAAS,oBAAsB,aAA/C,UACE,sBACEE,UAAU,gCACVK,QAAS,WACPO,GAAoB,GACpBD,EAAU,KAJd,UAME,qBAAKX,UAAU,iBAAiBC,IAAKoB,EAAOlB,IAAI,UAChD,qBACEH,UAAU,uBACVK,QAAS,WACPN,GAAU,GACVW,GAAU,IAJd,uEAUF,qBAAKV,UAAU,QAAf,oEAEA,qBAAIA,UAAU,iBAAd,UACE,oBACEK,QAAS,WACPM,EAAU,OACVC,GAAoB,GACpBb,GAAU,GACVW,GAAU,IALd,iFASA,qBAAIL,QAAS,kBAAMa,GAAoBD,IAAvC,iDAEGA,GACC,6BACGJ,EAAUS,KAAI,SAACC,EAASC,GAAV,OACb,oBAEEnB,QAAS,WACPM,EAAU,GAAD,OAAIY,IACbX,GAAoB,GACpBb,GAAU,GACVW,GAAU,IANd,SAQGa,GARH,UACUA,EADV,YACqBC,YAa7B,qBAAInB,QAAS,kBAAMe,GAAiBD,IAApC,0EAEGA,GACC,6BACGL,EAAYQ,KAAI,SAACC,EAASC,GAAV,OACf,oBAEEnB,QAAS,WACPM,EAAU,GAAD,OAAIY,IACbX,GAAoB,GACpBb,GAAU,GACVW,GAAU,IANd,SAQGa,GARH,UACUA,EADV,YACqBC,mBCrCtBC,EA7BV,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,KAAKC,EAAV,EAAUA,KAAKC,EAAf,EAAeA,MAAMC,EAArB,EAAqBA,UAAUC,EAA/B,EAA+BA,MAAMC,EAArC,EAAqCA,kBAAkBtB,EAAvD,EAAuDA,UAAvD,OAGG,yBAAQV,UAAW,eAAeK,QAAW,WAEzCyB,EAAUJ,GACVhB,GAAU,GAENsB,GADDD,IAJP,UAWG,8BAAK,0CAAQL,OACb,8BAAM,qBAAKzB,IAAK4B,EAAO1B,IAAI,cAC1B,8BACI,yBAAQH,UAAY,qBAApB,cAA2C2B,OAIhD,0CAAaC,KACRG,GAAS,qBAAK/B,UAAY,uBAAjB,SAA0C,qBAAKC,IAAKoB,EAAOlB,IAAI,e,sDCIzE,M,WAlCb,aAAe,yBAFf8B,IAAM,6CAEQ,KADdC,MAAQ,GAENC,YAAmBC,M,kFAIrB,qBAKWC,EALX,SAAAC,EAAA,6DAKWD,EALX,SAK+BE,GAAU,IAAD,OACpCA,EAAQC,QAAR,uCAAgB,WAAMC,GAAN,uBAAAH,EAAA,sEACII,MAAM,qCAAD,OAAsCD,EAAQd,OADvD,cACRgB,EADQ,gBAEKA,EAAIC,OAFT,cAERC,EAFQ,gBAIWH,MAAM,qCAAD,OACSG,EAAKC,UAAU,GAAGvB,QAAQI,OALnD,cAIRoB,EAJQ,iBAOYA,EAAWH,OAPvB,QAORI,EAPQ,OAQRC,EAAmBD,EAAYE,eAErCL,EAAKM,SAAWF,EAEhBG,aAAY,WACV,EAAKlB,MAAL,sBAAiB,EAAKA,OAAtB,CAA6BW,IAC7B,EAAKX,MAAMmB,MAAK,SAACf,EAAGgB,GAAJ,OAAUhB,EAAEZ,GAAK4B,EAAE5B,SAdvB,4CAAhB,wDANJ,SACoBgB,MAAMN,KAAKH,KAD/B,cACQU,EADR,gBAEqBA,EAAIC,OAFzB,OAEQC,EAFR,OAGET,KAAKH,IAAMY,EAAKU,KAsBhBlB,EAAoBmB,KAAKpB,KAAMS,EAAKN,SAzBtC,gD,8DCVa,MAA0B,mCCoJ1BkB,EAnIV,SAAC,GASC,IARLC,EAQI,EARJA,aACA5B,EAOI,EAPJA,UACA6B,EAMI,EANJA,OACAC,EAKI,EALJA,UACAC,EAII,EAJJA,iBACA7B,EAGI,EAHJA,kBACAtB,EAEI,EAFJA,UACAoD,EACI,EADJA,OAEA,EAAkB/C,IAAMC,SAAS,IAAjC,mBAAO+C,EAAP,KAAUC,EAAV,KACA,EAAsBjD,IAAMC,SAAS,CAAC,SAA/BiD,EAAP,oBAEMC,EAAUnD,IAAMoD,SAkBtB,SAASC,EAAOV,GAEd,OAAOA,EAAaC,QAAO,SAACD,GAC1B,OACEA,EAAaW,MAAM,GAAGzC,KAAKD,OAASgC,GACpCD,EAAaZ,UAAU,GAAGvB,QAAQI,OAASgC,GAUvB,QAAXA,EARFM,EAAYK,MAAK,SAACC,GACvB,OACEb,EAAaa,GACVC,WACAC,cACAC,QAAQX,EAAEU,gBAAkB,UAG9B,KAqDX,OApFA1D,IAAM4D,WAAU,WACC,QAAXhB,GACe,IAAIiB,sBACnB,SAACC,GACgB,QAAXlB,GAAoBkB,EAAQ,GAAGC,iBACjCC,EAAQC,UACRC,QAAQC,IAAI,UAGhB,CAACC,UAAW,IAGLC,QAAQlB,EAAQmB,WAE1B,CAAC1B,IAuEF,sBAAK3D,UAAW8D,EAAS,qBAAuB,cAAhD,UACE,qBAAK9D,UAAU,iBAAf,SACE,uBAAOsF,QAAQ,cAAf,SACE,uBACE1D,KAAK,SACLD,KAAK,cACLD,GAAG,cACH1B,UAAU,eACVuF,YAAY,gBACZC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAK0B,EAAEC,OAAOH,cAKpCT,EAAQ7C,MAAM0D,QAAU,GAvDvB/B,EACED,EAAUgC,OAAS,EACdhC,EAAUtC,KAAI,SAACmB,EAAqBjB,GAAtB,OACnB,cAAC,EAAD,CACEE,GAAIe,EAAQf,GACZC,KAAMc,EAAQd,KACdE,MAAOY,EAAQZ,MACfD,KAAMa,EAAQb,KAEdE,UAAWA,EACXC,MAAOU,EAAQV,MACfC,kBAAmBA,EACnBtB,UAAWA,GAJNc,MAQF,gHAIP,mCACG4C,EAAOV,GAAcpC,KAAI,SAACmB,EAAgBjB,GAAjB,OACxB,cAAC,EAAD,CACEE,GAAIe,EAAQf,GACZC,KAAMc,EAAQd,KACdE,MAAOY,EAAQoD,QAAQC,MAAMC,YAAYC,cACzCpE,KAAMa,EAAQ4B,MAAM,GAAGzC,KAAKD,KAE5BG,UAAWA,EACXC,MAAOU,EAAQV,MACfC,kBAAmBA,EACnBtB,UAAWA,GAJNc,QA+BX,8BACE,qBAAKvB,IAAKgG,EAAQ9F,IAAI,cAGd,QAAXwD,GACC,qBAAK3D,UAAU,OAAOkG,IAAKhC,EAA3B,SACE,6FC7CKiC,EA9EV,SAAC,GAaC,IAZLzE,EAYI,EAZJA,GACAC,EAWI,EAXJA,KACAE,EAUI,EAVJA,MACAD,EASI,EATJA,KACAL,EAQI,EARJA,QACA6E,EAOI,EAPJA,aACAxC,EAMI,EANJA,UACAyC,EAKI,EALJA,eACArE,EAII,EAJJA,kBACAsE,EAGI,EAHJA,SACAxC,EAEI,EAFJA,OACApD,EACI,EADJA,UAsBA,OACE,8BACE,sBAAKV,UAAW8D,EAAS,2BAA6B,mBAAtD,UACE,qBAAK9D,UAAU,yBAAf,SAAyC2B,IACzC,qBAAK3B,UAAU,0BAAf,SACE,qBAAKC,IAAK4B,EAAO1B,IAAI,OAEvB,sBAAKH,UAAU,yBAAf,mBAA+C4B,KAC/C,sBAAK5B,UAAU,4BAAf,sBACW,+BAAOuB,OAElB,sBAAKvB,UAAU,iCAAf,cAAkDoG,KAClD,sBAAKpG,UAAU,0BAAf,UACE,qBAAKK,QAAS,kBAjCtB,SAA0BkG,GACxB,GAAIA,EACF3C,GAAU,SAAC4C,GAAD,4BACLA,GADK,CAER,CAAE9E,GAAIA,EAAIC,KAAMA,EAAME,MAAOA,EAAOD,KAAMA,EAAMG,OAAO,QAEzDC,GAAmBuE,OACd,CACL,IAAME,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAE9CJ,EAAMjE,SAAQ,SAACsE,EAAatF,GACtBsF,EAAKpF,KAAOA,GACd+E,EAAMM,OAAOvF,EAAO,MAGxBoC,EAAU6C,GACVzE,GAAmBuE,GACnBD,EAASvE,OAAQ,GAgBOiF,CAAiBX,IAArC,SAEI,qBACErG,UACEsG,EAASvE,MACL,kCACA,oCAEN9B,IAAKoB,EACLlB,IAAI,QACJE,QAAS,WACPiG,EAASvE,OAAQ,OAKzB,qBAAK/B,UAAU,yBAAf,SACE,sBACEK,QAAS,WACPK,GAAU,IAFd,uDCxCGuG,EA3BX,SAAC,GAA2F,IAA1FC,EAAyF,EAAzFA,QAAQC,EAAiF,EAAjFA,gBAAgBvD,EAAiE,EAAjEA,UAAUyC,EAAuD,EAAvDA,eAAerE,EAAwC,EAAxCA,kBAAkB8B,EAAsB,EAAtBA,OAAOpD,EAAe,EAAfA,UAG9E,OAEE,qBAAMV,UAAY,OAAlB,SACGkH,GACC,cAAC,EAAD,CACAtD,UAAaA,EACb0C,SAAYa,EACZ5F,QAAW4F,EAAgBrE,UAAU,GAAGvB,QAAQI,KAChDyE,aAAgBe,EAAgBhE,SAAS,GAAGiE,OAC5C1F,GAAMyF,EAAgBzF,GACtBC,KAAQwF,EAAgBxF,KACxBE,MAASsF,EAAgBtB,QAAQC,MAAMC,YAAYC,cACnDpE,KAAQuF,EAAgB9C,MAAM,GAAGzC,KAAKD,KACtC0E,eAAkBA,EAClBrE,kBAAqBA,EACrB8B,OAAUA,EACVpD,UAAaA,OCKN2G,EArCgB,SAC3BC,EACAC,GAGF,MAAsCvG,oBAAS,WAC7C,IAEE,IAAM8F,EAAOxG,OAAOsG,aAAaC,QAAQS,GAEzC,OAAOR,EAAOJ,KAAKC,MAAMG,GAAQS,EACjC,MAAOC,GAGP,OADAvC,QAAQC,IAAIsC,GACLD,MATX,mBAAOE,EAAP,KAAoBC,EAApB,KA6BA,MAAO,CAACD,EAdS,SAACjC,GAChB,IAEE,IAAMmC,EAAenC,aAAiBoC,SAAWpC,EAAMiC,GAAejC,EAEtEkC,EAAeC,GAEfrH,OAAOsG,aAAaiB,QAAQP,EAAKZ,KAAKoB,UAAUH,IAChD,MAAOH,GAEPvC,QAAQC,IAAIsC,OCwCHO,EA5DV,SAAC,GAAsB,IAApBrE,EAAmB,EAAnBA,aACN,EAA8B1C,qBAA9B,mBAAOkG,EAAP,KAAgBc,EAAhB,KACA,EAA4BhH,mBAAS,OAArC,mBAAO2C,EAAP,KAAehD,EAAf,KAEA,EAA4BK,oBAAS,GAArC,mBAAO8C,EAAP,KAAepD,EAAf,KAEA,EAAgDM,oBAAS,GAAzD,mBAAO6C,EAAP,KAAyBjD,EAAzB,KAEA,EAAkCyG,EAAgB,OAAQ,IAA1D,mBAAOzD,EAAP,KAAkBqE,EAAlB,KAEA,EAA4CjH,oBAAS,GAArD,mBAAOqF,EAAP,KAAuBrE,EAAvB,KACA,EAA4BhB,oBAAS,GAArC,mBAAOlB,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQF,OAAQA,EAAQC,UAAWA,IACnC,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CACEW,UAAWA,EACXC,oBAAqBA,EACrBd,OAAQA,EACRC,UAAWA,EACXW,UAAWA,EACXG,UAAW,CAAC,QAAS,SAAU,OAAQ,QAAS,OAChDC,YAAa,CACX,YACA,QACA,cACA,YACA,gBACA,QACA,WACA,WACA,aAGJ,cAAC,EAAD,CACE4C,aAAcA,EACd5B,UAAWkG,EACXrE,OAAQA,EACRC,UAAWA,EACXC,iBAAkBA,EAClB7B,kBAAmBA,EACnBtB,UAAWA,EACXoD,OAAQA,IAEV,cAAC,EAAD,CACEoD,QAASA,EACTC,gBAAiBzD,EAAawD,EAAU,GACxCtD,UAAWqE,EACX5B,eAAgBA,EAChBrE,kBAAmBA,EACnB8B,OAAQA,EACRpD,UAAWA,W,QC/BNwH,EA3BcC,aAAS,WAoBpC,OAnBA,WACE,IAAM7F,EAAIoE,KAAKC,MAAMC,aAAaC,QAAQ,SACtCuB,EAAsB,GAEtB9F,IACFA,EAAEE,SAAQ,SAACsE,EAAWtF,GACpB4G,EAAU5G,GAASsF,EAAKpF,MAG1BqD,EAAQ7C,MAAMM,SAAQ,SAACsE,GACjBsB,EAAUC,SAASvB,EAAKpF,MAC1BoF,EAAK/E,OAAQ,OAMrBuG,GAGE,qBAAKtI,UAAU,MAAf,SACE,cAAC,EAAD,CAAW0D,aAAcqB,EAAQ7C,aCvBvCqG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1582ff5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nexport const Header: React.FC<{\n  burger: boolean\n  setBurger: (burger: boolean) => void\n}> = ({ burger, setBurger }) => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img src={logo} alt=\"pokemon\"onClick={() => window.location.reload()} />\n      </div>\n\n      <div\n        className=\"burger-menu\"\n        onClick={() => {\n          setBurger(!burger)\n        }}\n      >\n        <span></span>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const Categories: React.FC<{\n  setMobile: (par: boolean) => void\n  setBurger: (par: boolean) => void\n  setFilter: (param: string) => void\n  setFavoritesVisible: (p: boolean) => void\n  burger: boolean\n  itemClass: string[]\n  itemAbility: string[]\n}> = ({\n  setMobile,\n  setBurger,\n  setFilter,\n  setFavoritesVisible,\n  burger,\n  itemClass,\n  itemAbility\n}) => {\n  const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n  const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n  return (\n    <div className={burger ? 'categories active' : 'categories'}>\n      <div\n        className=\"categories-favorites__wrapper\"\n        onClick={() => {\n          setFavoritesVisible(true)\n          setFilter('')\n        }}>\n        <img className=\"categories-img\" src={heart} alt=\"heart\" />\n        <div\n          className=\"categories-favorites\"\n          onClick={() => {\n            setBurger(false)\n            setMobile(false)\n          }}>\n          Избранное\n        </div>\n      </div>\n\n      <div className=\"title\">Категории</div>\n\n      <ul className=\"categoriesList\">\n        <li\n          onClick={() => {\n            setFilter('All')\n            setFavoritesVisible(false)\n            setBurger(false)\n            setMobile(false)\n          }}>\n          Все покемоны\n        </li>\n        <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n          Классы\n          {visibleAbilites && (\n            <ul>\n              {itemClass.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    setFilter(`${ability}`)\n                    setFavoritesVisible(false)\n                    setBurger(false)\n                    setMobile(false)\n                  }}>\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n        <li onClick={() => setVisibleClass(!visibleClass)}>\n          Cпособности\n          {visibleClass && (\n            <ul>\n              {itemAbility.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    setFilter(`${ability}`)\n                    setFavoritesVisible(false)\n                    setBurger(false)\n                    setMobile(false)\n                  }}>\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Categories\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const PokemonCart: React.FC<{\n    id: number\n    name: string\n    type: string\n    image: string\n    deepState:(param: number) => void\n    favor: boolean\n    setShowHeartDescr: (param: boolean) => void \n    setMobile: (param:boolean)=> void\n   \n}> = ({id,name,type,image,deepState,favor,setShowHeartDescr,setMobile}) => (\n\n  \n        <button className= \"pokemon-cart\" onClick = {() => {\n            \n            deepState(id);\n            setMobile(true);\n            if(favor) {\n                setShowHeartDescr(false);\n            } else {\n                setShowHeartDescr(true);\n            }\n          \n        }}>\n           <div><span>№{id}</span></div>\n           <div ><img src={image} alt=\"pokemon\" /></div>\n            <div>\n                <strong className = \"pokemon-cart__name\"> {name}</strong>\n                \n            </div>\n            \n           <div>Class: {type}</div>\n               {favor && <div className = \"pokemon-cart__heart \"  ><img src={heart} alt=\"like\" / ></div>}\n              \n        </button>\n            \n    \n)\n\nexport default PokemonCart\n","import { makeAutoObservable, runInAction } from 'mobx';\n\nclass allPoki {\n  api = 'https://pokeapi.co/api/v2/pokemon?limit=20';\n  count = [];\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n\n  async getPoki() {\n    const res = await fetch(this.api);\n    const data = await res.json();\n    this.api = data.next;\n\n    function createPokemonObject(results) {\n      results.forEach(async pokemon => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\n        const data = await res.json();\n\n        const resAbility = await fetch(\n          `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`,\n        );\n        const dataAbility = await resAbility.json();\n        const dataAbilityDescr = dataAbility.effect_entries;\n\n        data.abildesr = dataAbilityDescr;\n\n        runInAction(() => {\n          this.count = [...this.count, data];\n          this.count.sort((a, b) => a.id - b.id);\n        });\n      });\n    }\n\n    createPokemonObject.call(this, data.results);\n  }\n}\n\nexport default new allPoki();\n","export default __webpack_public_path__ + \"static/media/loader.f67880ae.svg\";","import React from 'react'\nimport PokemonCart from './PokemonCart'\nimport allPoki from '../../store/allPoki'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport loader from '../../assets/loader.svg'\n\nexport const SelectItems: React.FC<{\n  pokemonsList: IPoki[]\n  deepState: (param: number) => void\n  filter: string\n  favorites: IPokiFavor[]\n  favoritesVisible: boolean\n  setShowHeartDescr: (param: boolean) => void\n  setMobile: (param: boolean) => void\n  mobile: boolean\n}> = ({\n  pokemonsList,\n  deepState,\n  filter,\n  favorites,\n  favoritesVisible,\n  setShowHeartDescr,\n  setMobile,\n  mobile\n}) => {\n  const [q, setQ] = React.useState('') // это для поискового запроса\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  const pageEnd = React.useRef<any>()\n\n  React.useEffect(() => {\n    if (filter === 'All') {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          if (filter === 'All' && entries[0].isIntersecting) {\n            allPoki.getPoki()\n            console.log('123')\n          }\n        },\n        {threshold: 1}\n      )\n\n      observer.observe(pageEnd.current)\n    }\n  }, [filter])\n\n  function search(pokemonsList: IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList: any) => {\n      if (\n        pokemonsList.types[0].type.name === filter ||\n        pokemonsList.abilities[0].ability.name === filter\n      ) {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      } else if (filter === 'All') {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      }\n    })\n  }\n\n  function renderFavorOrItems() {\n    if (favoritesVisible) {\n      if (favorites.length > 0) {\n        return favorites.map((pokemon: IPokiFavor, index: number) => (\n          <PokemonCart\n            id={pokemon.id}\n            name={pokemon.name}\n            image={pokemon.image}\n            type={pokemon.type}\n            key={index}\n            deepState={deepState}\n            favor={pokemon.favor}\n            setShowHeartDescr={setShowHeartDescr}\n            setMobile={setMobile}\n          />\n        ))\n      } else {\n        return <div> У вас тут пусто </div>\n      }\n    } else {\n      return (\n        <>\n          {search(pokemonsList).map((pokemon: IPoki, index: number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              deepState={deepState}\n              favor={pokemon.favor}\n              setShowHeartDescr={setShowHeartDescr}\n              setMobile={setMobile}\n            />\n          ))}\n        </>\n      )\n    }\n  }\n\n  return (\n    <div className={mobile ? 'selectItems mobile' : 'selectItems'}>\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {allPoki.count.length >= 19 ? (\n        renderFavorOrItems()\n      ) : (\n        <div>\n          <img src={loader} alt=\"loading\" />\n        </div>\n      )}\n      {filter === 'All' && (\n        <div className=\"test\" ref={pageEnd}>\n          <span>Загрузка...</span>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default SelectItems\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport { IPoki } from '../../interface'\n\nexport const PokemonDescription: React.FC<{\n  id: number\n  name: string\n  image: string\n  type: string\n  ability: string\n  abilityDescr: string\n  favorites: (param: any) => void\n  showHeartDescr: boolean\n  setShowHeartDescr: (param: boolean) => void\n  allDescr: IPoki\n  mobile: boolean\n  setMobile: (param: boolean) => void\n}> = ({\n  id,\n  name,\n  image,\n  type,\n  ability,\n  abilityDescr,\n  favorites,\n  showHeartDescr,\n  setShowHeartDescr,\n  allDescr,\n  mobile,\n  setMobile,\n}) => {\n  function addOrDeleteFavor(params: boolean) {\n    if (params) {\n      favorites((currentList: [{}]) => [\n        ...currentList,\n        { id: id, name: name, image: image, type: type, favor: true },\n      ])\n      setShowHeartDescr(!params)\n    } else {\n      const todos = JSON.parse(localStorage.getItem('poki')!)\n\n      todos.forEach((item: IPoki, index: number) => {\n        if (item.id === id) {\n          todos.splice(index, 1)\n        }\n      })\n      favorites(todos)\n      setShowHeartDescr(!params)\n      allDescr.favor = false\n    }\n  }\n  return (\n    <div>\n      <div className={mobile ? 'view-description__mobile' : 'view-description'}>\n        <div className=\"view-description__name\">{name}</div>\n        <div className=\"view-description__image\">\n          <img src={image} alt=\"\" />\n        </div>\n        <div className=\"view-description__type\">Class:{type}</div>\n        <div className=\"view-description__ability\">\n          Ability: <span>{ability}</span>\n        </div>\n        <div className=\"view-description__abilityDescr\"> {abilityDescr}</div>\n        <div className=\"view-description__heart\">\n          <div onClick={() => addOrDeleteFavor(showHeartDescr)}>\n            {\n              <img\n                className={\n                  allDescr.favor\n                    ? 'view-description__heart--active'\n                    : 'view-description__heart--noactive'\n                }\n                src={heart}\n                alt=\"heart\"\n                onClick={() => {\n                  allDescr.favor = true\n                }}\n              />\n            }\n          </div>\n          <div className=\"view-description__back\">\n            <span\n              onClick={() => {\n                setMobile(false)\n              }}\n            >\n              Назад\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonDescription\n","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\n\n\nimport {IPoki} from \"../../interface\";\n\nexport const View: React.FC<{\n  myState:any\n  pokiDescription:IPoki\n  favorites: ()=> void\n  showHeartDescr:boolean\n  setShowHeartDescr: (param:boolean) => void\n  mobile: boolean\n  setMobile: (param:boolean) => void\n\n}> =({myState,pokiDescription,favorites,showHeartDescr,setShowHeartDescr,mobile,setMobile}) => {\n\n\n  return (\n\n    <div  className = \"view\" >\n     { myState &&\n        <PokemonDescription\n        favorites = {favorites}\n        allDescr = {pokiDescription}\n        ability = {pokiDescription.abilities[0].ability.name}\n        abilityDescr = {pokiDescription.abildesr[1].effect}\n        id = {pokiDescription.id}\n        name = {pokiDescription.name}\n        image = {pokiDescription.sprites.other.dream_world.front_default}\n        type = {pokiDescription.types[0].type.name}\n        showHeartDescr = {showHeartDescr}\n        setShowHeartDescr = {setShowHeartDescr}\n        mobile = {mobile}\n        setMobile = {setMobile}\n        />\n      }\n    </div>\n  )\n\n}\n\nexport default View\n","import { useState } from 'react';\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: any,\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useState } from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from './useLocalStorage'\n\n\nimport { IPoki } from '../../interface'\n\nexport const Container: React.FC<{\n  pokemonsList: IPoki[]\n}> = ({ pokemonsList }) => {\n  const [myState, setMyState] = useState<any>()\n  const [filter, setFilter] = useState('All')\n\n  const [mobile, setMobile] = useState(false)\n\n  const [favoritesVisible, setFavoritesVisible] = useState(false)\n\n  const [favorites, setFavorites] = useLocalStorage('poki', [])\n\n  const [showHeartDescr, setShowHeartDescr] = useState(true)\n  const [burger, setBurger] = useState(false)\n\n  return (\n    <div className=\"container\">\n      <Header burger={burger} setBurger={setBurger} />\n      <div className=\"wrapper\">\n        <Categories\n          setFilter={setFilter}\n          setFavoritesVisible={setFavoritesVisible}\n          burger={burger}\n          setBurger={setBurger}\n          setMobile={setMobile}\n          itemClass={['grass', 'normal', 'fire', 'water', 'bug']}\n          itemAbility={[\n            'overgroth',\n            'blaze',\n            'shield-dust',\n            'shed-skin',\n            'compound-eyes',\n            'swarm',\n            'keen-eye',\n            'run-away',\n            'torrent',\n          ]}\n        />\n        <SelectItems\n          pokemonsList={pokemonsList}\n          deepState={setMyState}\n          filter={filter}\n          favorites={favorites}\n          favoritesVisible={favoritesVisible}\n          setShowHeartDescr={setShowHeartDescr}\n          setMobile={setMobile}\n          mobile={mobile}\n          />\n        <View\n          myState={myState}\n          pokiDescription={pokemonsList[myState - 1]}\n          favorites={setFavorites}\n          showHeartDescr={showHeartDescr}\n          setShowHeartDescr={setShowHeartDescr}\n          mobile={mobile}\n          setMobile={setMobile}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","\nimport React from 'react'\nimport Container from '../Container/Container'\n\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const App: React.FC = observer(() => {\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!)\n    let favorPoki: number[] = []\n\n    if (a) {\n      a.forEach((item: any, index: number) => {\n        favorPoki[index] = item.id\n      })\n\n      allPoki.count.forEach((item) => {\n        if (favorPoki.includes(item.id)) {\n          item.favor = true\n        }\n      })\n    }\n  }\n\n  checkFavorPoki()\n\n  return (\n    <div className=\"App\">\n      <Container pokemonsList={allPoki.count} />\n    </div>\n  )\n})\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}