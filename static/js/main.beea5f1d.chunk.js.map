{"version":3,"sources":["assets/logo.png","assets/ball-1.png","store/burger.ts","components/Container/Header.tsx","assets/Heart1.png","store/mobile.ts","store/favorItems.ts","store/pokemonsFilter.ts","components/Container/Categories.tsx","store/pokemonsID.ts","store/showHeart.ts","store/allPoki.ts","store/loadDescription.ts","components/Container/PokemonCart.tsx","assets/loader.svg","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","assets/emptyDescr.png","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["burgerState","makeAutoObservable","this","observable","setReverseState","action","Header","observer","className","src","ball","alt","logo","onClick","window","location","reload","burger","mobileState","activeMobile","disableMobile","favorState","favorActive","favorDisable","filter","inputValue","setFilter","value","Categories","itemClass","itemAbility","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","favorItems","pokemonsFilter","heart","mobile","map","ability","index","idPoki","pokifavor","setIdPoki","param","heartActive","heartDisable","api","pokemons","getPoki","falseFavor","trueFavor","a","fetch","res","json","data","next","createPokemonObject","call","results","forEach","pokemon","name","abilities","resAbility","dataAbility","dataAbilityDescr","effect_entries","abildesr","runInAction","sort","b","id","length","favor","loading","favorOrNot","checkLocal","pokemonsID","description","JSON","parse","localStorage","getItem","poki","console","log","allPoki","PokemonCart","type","image","pokemonsId","load","showHeart","SelectItems","favorites","searchParam","pageEnd","useRef","useEffect","IntersectionObserver","entries","isIntersecting","threshold","current","observe","htmlFor","placeholder","onChange","e","setInputValue","target","pokemonsList","types","some","toString","toLowerCase","indexOf","sprites","other","dream_world","front_default","renderFavorOrItems","loader","ref","PokemonDescription","abilityDescr","allDescr","params","currentList","todos","item","splice","addOrDeleteFavor","View","loadDescription","emptyDescr","effect","useLocalStorage","key","initialValue","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setFavorites","App","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.beea5f1d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass burger {\n  burgerState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      burgerState: observable,\n      setReverseState: action\n    })\n  }\n  setReverseState() {\n    this.burgerState = !this.burgerState\n  }\n}\n\nexport default new burger()\n","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\n\nexport const Header: React.FC<{}> = observer(() => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img\n          src={logo}\n          alt=\"pokemon\"\n          onClick={() => window.location.reload()}\n        />\n      </div>\n\n      <div className=\"burger-menu\">\n        <span></span>\n      </div>\n\n      <div\n        className=\"burger-menu\"\n        onClick={() => {\n          burger.setReverseState()\n        }}>\n        <span></span>\n      </div>\n    </div>\n  )\n})\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass mobile {\n  mobileState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      mobileState: observable,\n      setReverseState: action,\n      activeMobile: action,\n      disableMobile: action\n    })\n  }\n  setReverseState() {\n    this.mobileState = !this.mobileState\n  }\n  activeMobile() {\n    this.mobileState = true\n  }\n\n  disableMobile() {\n    this.mobileState = false\n  }\n}\n\nexport default new mobile()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass favorItems {\n  favorState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      favorState: observable,\n      favorActive: action,\n      favorDisable: action\n    })\n  }\n\n  favorActive() {\n    this.favorState = true\n  }\n\n  favorDisable() {\n    this.favorState = false\n  }\n}\n\nexport default new favorItems()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass pokemonsFilter {\n  filter = 'All'\n  inputValue = ''\n\n  constructor() {\n    makeAutoObservable(this, {\n      filter: observable,\n      inputValue: observable,\n      setFilter: action\n    })\n  }\n\n  setFilter(value: string) {\n    this.filter = value\n  }\n  setInputValue(value:string) {\n    this.inputValue = value;\n  }\n}\n\nexport default new pokemonsFilter()","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\nimport pokemonsFilter from '../../store/pokemonsFilter'\n\nexport const Categories: React.FC<{\n  itemClass: string[]\n  itemAbility: string[]\n}> = observer(({itemClass, itemAbility}) => {\n  const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n  const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n  return (\n    <div className={burger.burgerState ? 'categories active' : 'categories'}>\n      <div\n        className=\"categories-favorites__wrapper\"\n        onClick={() => {\n          favorItems.favorActive()\n          //setFavoritesVisible(true)\n          pokemonsFilter.setFilter('')\n        }}>\n        <img className=\"categories-img\" src={heart} alt=\"heart\" />\n        <div\n          className=\"categories-favorites\"\n          onClick={() => {\n            burger.burgerState = false\n            mobile.disableMobile()\n          }}>\n          Избранное\n        </div>\n      </div>\n\n      <div className=\"title\">Категории</div>\n\n      <ul className=\"categoriesList\">\n        <li\n          onClick={() => {\n            pokemonsFilter.setFilter('All')\n            favorItems.favorDisable()\n            //setFavoritesVisible(false)\n            burger.burgerState = false\n            mobile.disableMobile()\n          }}>\n          Все покемоны\n        </li>\n        <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n          Классы\n          {visibleAbilites && (\n            <ul>\n              {itemClass.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    pokemonsFilter.setFilter(`${ability}`)\n                    favorItems.favorDisable()\n                    //setFavoritesVisible(false)\n                    burger.burgerState = false\n                    mobile.disableMobile()\n                  }}>\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n        <li onClick={() => setVisibleClass(!visibleClass)}>\n          Cпособности\n          {visibleClass && (\n            <ul>\n              {itemAbility.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    pokemonsFilter.setFilter(`${ability}`)\n                    favorItems.favorDisable()\n                    //setFavoritesVisible(false)\n                    burger.burgerState = false\n                    mobile.disableMobile()\n                  }}>\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      </ul>\n    </div>\n  )\n})\nexport default Categories\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass pokemonsID {\n  idPoki = 0\n  pokifavor = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      idPoki: observable,\n      setIdPoki: action\n    })\n  }\n\n\n  setIdPoki(value:number,param:boolean) {\n    this.idPoki = value\n    this.pokifavor = param;\n  }\n  \n\n}\n\nexport default new pokemonsID()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass showHeart {\n  heart = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      heart: observable,\n      heartActive: action,\n      heartDisable: action\n    })\n  }\n\n  heartActive() {\n    this.heart = true\n  }\n\n  heartDisable() {\n    this.heart = false\n  }\n}\n\nexport default new showHeart()\n","import {action, makeAutoObservable, observable, runInAction} from 'mobx'\nimport {IPoki} from '../interface'\n\nclass allPoki {\n  api = 'https://pokeapi.co/api/v2/pokemon?limit=20'\n  pokemons: IPoki[] = []\n\n  constructor() {\n    makeAutoObservable(this, {\n      pokemons: observable,\n      getPoki: action,\n      falseFavor: action,\n      trueFavor: action\n    })\n  }\n\n  async getPoki() {\n    const res = await fetch(this.api)\n    const data = await res.json()\n    this.api = data.next\n    this.createPokemonObject([])\n    this.createPokemonObject.call(this, data.results)\n  }\n\n  createPokemonObject(results: IPoki[]) {\n    results.forEach(async (pokemon) => {\n      const res = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\n      )\n      const data = await res.json()\n\n      const resAbility = await fetch(\n        `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`\n      )\n      const dataAbility = await resAbility.json()\n      const dataAbilityDescr = dataAbility.effect_entries\n\n      data.abildesr = dataAbilityDescr\n\n      runInAction(() => {\n        this.pokemons = [...this.pokemons, data]\n        this.pokemons.sort((a: IPoki, b: IPoki) => a.id - b.id)\n      })\n    })\n  }\n\n  falseFavor(id: number) {\n    if (id < this.pokemons.length) {\n      this.pokemons[id - 1].favor = false\n    }\n  }\n\n  trueFavor(id: number) {\n    if (id < this.pokemons.length) {\n      this.pokemons[id - 1].favor = true\n    }\n  }\n}\n\nexport default new allPoki()\n","import {action, makeAutoObservable, observable} from 'mobx'\nimport pokemonsID from './pokemonsID'\nimport allPoki from '../store/allPoki'\nimport {IPokiFavor} from '../interface'\n\n\nclass loadDescription {\n  loading:number = 0;\n  mobileState:any = null;\n  favorOrNot:boolean = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      mobileState: observable,\n      loading: observable,\n      checkLocal: action\n    })\n  }\n\n  checkLocal() {\n\n    if(pokemonsID.pokifavor) {\n      const description = JSON.parse(localStorage.getItem('poki')!).filter((poki:IPokiFavor) => poki.id === pokemonsID.idPoki)\n      let a = description\n      this.mobileState  = description\n      console.log(a)\n      this.loading = 1\n    }\n    else {\n      this.mobileState = allPoki.pokemons[pokemonsID.idPoki - 1]\n      this.loading = 2\n    }\n\n  }\n\n}\n\nexport default new loadDescription()\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\nimport pokemonsId from '../../store/pokemonsID'\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport load from '../../store/loadDescription'\nimport {observer} from 'mobx-react-lite'\nexport const PokemonCart: React.FC<{\n  id: number\n  name: string\n  type: string\n  image: string\n\n  favor: boolean\n}> = observer(({id, name, type, image, favor}) => (\n  <button\n    className=\"pokemon-cart\"\n    onClick={() => {\n      // deepState(id);\n      pokemonsId.setIdPoki(id, favor)\n      mobile.activeMobile()\n      load.checkLocal()\n      if (favor) {\n        showHeart.heartDisable()\n        //setShowHeartDescr(false)\n      } else {\n        showHeart.heartActive()\n        //setShowHeartDescr(true)\n      }\n    }}>\n    <div>\n      <span>№{id}</span>\n    </div>\n    <div>\n      <img src={image} alt=\"pokemon\" />\n    </div>\n    <div>\n      <strong className=\"pokemon-cart__name\"> {name}</strong>\n    </div>\n\n    <div>Class: {type}</div>\n    {favor && (\n      <div className=\"pokemon-cart__heart \">\n        <img src={heart} alt=\"like\" />\n      </div>\n    )}\n  </button>\n))\n\nexport default PokemonCart\n","export default __webpack_public_path__ + \"static/media/loader.f67880ae.svg\";","import React from 'react'\nimport PokemonCart from './PokemonCart'\nimport allPoki from '../../store/allPoki'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport loader from '../../assets/loader.svg'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\nimport {observer} from 'mobx-react-lite'\nimport pokemonsFilter from '../../store/pokemonsFilter'\n\nexport const SelectItems: React.FC<{\n  favorites: IPokiFavor[]\n}> = observer(({favorites}) => {\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  const pageEnd = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    if (pokemonsFilter.filter === 'All') {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          console.log(entries)\n\n          if (\n            pokemonsFilter.filter === 'All' &&\n            entries[0].isIntersecting &&\n            pokemonsFilter.inputValue === ''\n          ) {\n            allPoki.getPoki()\n          }\n        },\n        {threshold: 1}\n      )\n      if (null !== pageEnd.current) {\n        observer.observe(pageEnd.current)\n      }\n    } // eslint-disable-next-line\n  }, [pokemonsFilter.filter])\n\n  function search(pokemonsList: IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList: IPoki) => {\n      if (\n        pokemonsList.types[0].type.name === pokemonsFilter.filter ||\n        pokemonsList.abilities[0].ability.name === pokemonsFilter.filter\n      ) {\n        return searchParam.some(() => {\n          return (\n            pokemonsList\n              .toString()\n              .toLowerCase()\n              .indexOf(pokemonsFilter.inputValue.toLowerCase()) > -1\n          )\n        })\n      } else if (pokemonsFilter.filter === 'All') {\n        return searchParam.some(() => {\n          return (\n            pokemonsList\n              .toString()\n              .toLowerCase()\n              .indexOf(pokemonsFilter.inputValue.toLowerCase()) > -1\n          )\n        })\n      }\n    })\n  }\n\n  function renderFavorOrItems() {\n    if (favorItems.favorState) {\n      if (favorites.length > 0) {\n        return favorites.map((pokemon: IPokiFavor, index: number) => (\n          <PokemonCart\n            id={pokemon.id}\n            name={pokemon.name}\n            image={pokemon.image}\n            type={pokemon.type}\n            key={index}\n            favor={pokemon.favor}\n          />\n        ))\n      } else {\n        return <div> У вас тут пусто </div>\n      }\n    } else {\n      return (\n        <>\n          {search(allPoki.pokemons).map((pokemon: IPoki, index: number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              favor={pokemon.favor}\n            />\n          ))}\n        </>\n      )\n    }\n  }\n\n  return (\n    <div className={mobile.mobileState ? 'selectItems mobile' : 'selectItems'}>\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={pokemonsFilter.inputValue}\n            onChange={(e) => {\n              pokemonsFilter.setInputValue(e.target.value)\n            }}\n          />\n        </label>\n      </div>\n\n      {allPoki.pokemons.length >= 19 ? (\n        renderFavorOrItems()\n      ) : (\n        <div>\n          <img src={loader} alt=\"loading\" />\n        </div>\n      )}\n      {pokemonsFilter.filter === 'All' && (\n        <div className=\"download\" ref={pageEnd}>\n          <span className={pokemonsFilter.inputValue ? 'disable' : 'active'}>\n            Загрузка...\n          </span>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default SelectItems\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const PokemonDescription: React.FC<{\n  id: number\n  name: string\n  image: string\n  type: string\n  ability: string\n  abilityDescr: string\n  favorites: (param: any) => void\n  allDescr: IPoki | IPokiFavor\n}> = observer(\n  ({id, name, image, type, ability, abilityDescr, favorites, allDescr}) => {\n    function addOrDeleteFavor(params: boolean) {\n      if (params) {\n        favorites((currentList: [{}]) => [\n          ...currentList,\n          {\n            id: id,\n            name: name,\n            image: image,\n            type: type,\n            favor: true,\n            ability: ability,\n            abilityDescr: abilityDescr\n          }\n        ])\n        showHeart.heartDisable()\n\n        //setShowHeartDescr(!params)\n      } else {\n        const todos = JSON.parse(localStorage.getItem('poki')!)\n\n        todos.forEach((item: IPoki | IPokiFavor, index: number) => {\n          if (item.id === id) {\n            todos.splice(index, 1)\n          }\n        })\n        favorites(todos)\n\n        showHeart.heartActive()\n        //setShowHeartDescr(!params)\n        //allDescr.favor = false\n        allPoki.falseFavor(id)\n      }\n    }\n    return (\n      <div>\n        <div\n          className={\n            mobile.mobileState ? 'view-description__mobile' : 'view-description'\n          }>\n          <div className=\"view-description__name\">{name}</div>\n          <div className=\"view-description__image\">\n            <img src={image} alt=\"\" />\n          </div>\n          <div className=\"view-description__type\">Class:{type}</div>\n          <div className=\"view-description__ability\">\n            Ability: <span>{ability}</span>\n          </div>\n          <div className=\"view-description__abilityDescr\"> {abilityDescr}</div>\n          <div className=\"view-description__heart\">\n            <div onClick={() => addOrDeleteFavor(showHeart.heart)}>\n              {\n                <img\n                  className={\n                    !showHeart.heart\n                      ? 'view-description__heart--active'\n                      : 'view-description__heart--noactive'\n                  }\n                  src={heart}\n                  alt=\"heart\"\n                  onClick={() => {\n                    allPoki.trueFavor(id)\n                  }}\n                />\n              }\n            </div>\n            <div className=\"view-description__back\">\n              <span\n                onClick={() => {\n                  mobile.disableMobile()\n                }}>\n                Назад\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default PokemonDescription\n","export default __webpack_public_path__ + \"static/media/emptyDescr.400e7447.png\";","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\nimport emptyDescr from '../../../src/assets/emptyDescr.png'\n\nimport loadDescription from '../../store/loadDescription'\n\nimport {observer} from 'mobx-react-lite'\n\nexport const View: React.FC<{\n  favorites: () => void\n}> = observer(({favorites}) => {\n  function renderDescription() {\n    if (loadDescription.loading === 0) {\n      return (\n        <div className=\"view-emptyDescr\">\n          <img src={emptyDescr} alt=\"Пустое описание\" />\n          <div>Нажмите на покемона в списке</div>\n        </div>\n      )\n    } else if (loadDescription.loading === 2) {\n      return (\n        <>\n          <PokemonDescription\n            favorites={favorites}\n            allDescr={loadDescription.mobileState}\n            ability={loadDescription.mobileState.abilities[0].ability.name}\n            abilityDescr={loadDescription.mobileState.abildesr[1].effect}\n            id={loadDescription.mobileState.id}\n            name={loadDescription.mobileState.name}\n            image={\n              loadDescription.mobileState.sprites.other.dream_world\n                .front_default\n            }\n            type={loadDescription.mobileState.types[0].type.name}\n          />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <PokemonDescription\n            favorites={favorites}\n            allDescr={loadDescription.mobileState[0]}\n            ability={loadDescription.mobileState[0].ability}\n            abilityDescr={loadDescription.mobileState[0].abilityDescr}\n            id={loadDescription.mobileState[0].id}\n            name={loadDescription.mobileState[0].name}\n            image={loadDescription.mobileState[0].image}\n            type={loadDescription.mobileState[0].type}\n          />\n        </>\n      )\n    }\n  }\n\n  return <div className=\"view\">{renderDescription()}</div>\n})\n\nexport default View\n\n//pokemonsId.idPoki\n\n// return (\n//   pokemonsId.idPoki && (\n/* <PokemonDescription\n  favorites={favorites}\n  allDescr={pokiDescription}\n  ability={pokiDescription.abilities[0].ability.name}\n  abilityDescr={pokiDescription.abildesr[1].effect}\n  id={pokiDescription.id}\n  name={pokiDescription.name}\n  image={pokiDescription.sprites.other.dream_world.front_default}\n  type={pokiDescription.types[0].type.name}\n/> */\n//   )\n// )\n","import { useState } from 'react';\nimport {IPokiFavor} from '../../interface'\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: IPokiFavor[],\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:IPokiFavor) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from './useLocalStorage'\n\nimport {observer} from 'mobx-react-lite'\n\nexport const Container: React.FC<{}> = observer(() => {\n  const [favorites, setFavorites] = useLocalStorage('poki', [])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"wrapper\">\n        <Categories\n          itemClass={['grass', 'normal', 'fire', 'water', 'bug']}\n          itemAbility={[\n            'overgroth',\n            'blaze',\n            'shield-dust',\n            'shed-skin',\n            'compound-eyes',\n            'swarm',\n            'keen-eye',\n            'run-away',\n            'torrent'\n          ]}\n        />\n\n        <SelectItems favorites={favorites} />\n        <View favorites={setFavorites} />\n      </div>\n    </div>\n  )\n})\n\nexport default Container\n","import React from 'react'\nimport Container from '../Container/Container'\nimport {IPokiFavor} from '../../interface'\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const App: React.FC = observer(() => {\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!)\n    let favorPoki: number[] = []\n\n    if (a) {\n      a.forEach((item: IPokiFavor, index: number) => {\n        favorPoki[index] = item.id\n      })\n\n      allPoki.pokemons.forEach((item, index) => {\n        if (favorPoki.includes(item.id)) {\n          allPoki.trueFavor(index + 1)\n        }\n      })\n    }\n  }\n\n  checkFavorPoki()\n\n  return (\n    <div className=\"App\">\n      <Container />\n    </div>\n  )\n})\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}