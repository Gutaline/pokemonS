{"version":3,"sources":["assets/logo.png","assets/ball-1.png","store/burger.js","components/Container/Header.tsx","assets/Heart1.png","store/mobile.js","store/favorItems.js","components/Container/Categories.tsx","store/pokemonsID.js","store/showHeart.js","components/Container/PokemonCart.tsx","store/allPoki.js","assets/loader.svg","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["burgerState","makeAutoObservable","this","observable","setReverseState","action","Header","observer","className","src","ball","alt","logo","onClick","window","location","reload","burger","mobileState","activeMobile","disableMobile","favorState","favorActive","favorDisable","Categories","setFilter","itemClass","itemAbility","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","favorItems","heart","mobile","map","ability","index","idPoki","getIdPoki","setIdPoki","value","heartActive","heartDisable","PokemonCart","id","name","type","image","favor","pokemonsId","showHeart","api","count","getPoki","falseFavor","trueFavor","createPokemonObject","a","results","forEach","pokemon","fetch","res","json","data","abilities","resAbility","dataAbility","dataAbilityDescr","effect_entries","abildesr","runInAction","sort","b","next","call","SelectItems","pokemonsList","filter","favorites","q","setQ","searchParam","pageEnd","useRef","search","types","some","newItem","toString","toLowerCase","indexOf","useEffect","IntersectionObserver","entries","isIntersecting","allPoki","threshold","observe","current","htmlFor","placeholder","onChange","e","target","length","sprites","other","dream_world","front_default","loader","ref","PokemonDescription","abilityDescr","allDescr","params","currentList","todos","JSON","parse","localStorage","getItem","item","splice","addOrDeleteFavor","View","pokiDescription","effect","renderDescription","useLocalStorage","key","initialValue","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setFavorites","App","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0e7fe8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass burger {\n  burgerState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      burgerState: observable,\n      setReverseState: action\n    })\n  }\n  setReverseState() {\n    this.burgerState = !this.burgerState\n  }\n}\n\nexport default new burger()\n","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\n\nexport const Header: React.FC<{}> = observer(() => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img\n          src={logo}\n          alt=\"pokemon\"\n          onClick={() => window.location.reload()}\n        />\n      </div>\n\n      <div className=\"burger-menu\">\n        <span></span>\n      </div>\n\n      <div\n        className=\"burger-menu\"\n        onClick={() => {\n          burger.setReverseState()\n        }}>\n        <span></span>\n      </div>\n    </div>\n  )\n})\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass mobile {\n  mobileState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      mobileState: observable,\n      setReverseState: action,\n      activeMobile: action,\n      disableMobile: action\n    })\n  }\n  setReverseState() {\n    this.mobileState = !this.mobileState\n  }\n  activeMobile() {\n    this.mobileState = true\n  }\n\n  disableMobile() {\n    this.mobileState = false\n  }\n}\n\nexport default new mobile()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass favorItems {\n  favorState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      favorState: observable,\n      favorActive: action,\n      favorDisable: action\n    })\n  }\n\n  favorActive() {\n    this.favorState = true\n  }\n\n  favorDisable() {\n    this.favorState = false\n  }\n}\n\nexport default new favorItems()\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\n\nexport const Categories: React.FC<{\n  setFilter: (param: string) => void\n\n  itemClass: string[]\n  itemAbility: string[]\n}> = observer(\n  ({\n    setFilter,\n\n    itemClass,\n    itemAbility\n  }) => {\n    const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n    const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n    return (\n      <div className={burger.burgerState ? 'categories active' : 'categories'}>\n        <div\n          className=\"categories-favorites__wrapper\"\n          onClick={() => {\n            favorItems.favorActive()\n            //setFavoritesVisible(true)\n            setFilter('')\n          }}>\n          <img className=\"categories-img\" src={heart} alt=\"heart\" />\n          <div\n            className=\"categories-favorites\"\n            onClick={() => {\n              burger.burgerState = false\n              mobile.disableMobile()\n            }}>\n            Избранное\n          </div>\n        </div>\n\n        <div className=\"title\">Категории</div>\n\n        <ul className=\"categoriesList\">\n          <li\n            onClick={() => {\n              setFilter('All')\n              favorItems.favorDisable()\n              //setFavoritesVisible(false)\n              burger.burgerState = false\n              mobile.disableMobile()\n            }}>\n            Все покемоны\n          </li>\n          <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n            Классы\n            {visibleAbilites && (\n              <ul>\n                {itemClass.map((ability, index) => (\n                  <li\n                    key={`${ability}_${index}`}\n                    onClick={() => {\n                      setFilter(`${ability}`)\n                      favorItems.favorDisable()\n                      //setFavoritesVisible(false)\n                      burger.burgerState = false\n                      mobile.disableMobile()\n                    }}>\n                    {ability}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n          <li onClick={() => setVisibleClass(!visibleClass)}>\n            Cпособности\n            {visibleClass && (\n              <ul>\n                {itemAbility.map((ability, index) => (\n                  <li\n                    key={`${ability}_${index}`}\n                    onClick={() => {\n                      setFilter(`${ability}`)\n                      favorItems.favorDisable()\n                      //setFavoritesVisible(false)\n                      burger.burgerState = false\n                      mobile.disableMobile()\n                    }}>\n                    {ability}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        </ul>\n      </div>\n    )\n  }\n)\nexport default Categories\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass pokemonsID {\n  idPoki = 0\n\n  constructor() {\n    makeAutoObservable(this, {\n      idPoki: observable,\n      getIdPoki: action,\n      setIdPoki: action\n    })\n  }\n\n  setIdPoki(value) {\n    this.idPoki = value\n  }\n}\n\nexport default new pokemonsID()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass showHeart {\n  heart = true\n\n  constructor() {\n    makeAutoObservable(this, {\n      heart: observable,\n      heartActive: action,\n      heartDisable: action\n    })\n  }\n\n  heartActive() {\n    this.heart = true\n  }\n\n  heartDisable() {\n    this.heart = false\n  }\n}\n\nexport default new showHeart()\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\nimport pokemonsId from '../../store/pokemonsID'\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport {observer} from 'mobx-react-lite'\nexport const PokemonCart: React.FC<{\n  id: number\n  name: string\n  type: string\n  image: string\n\n  favor: boolean\n}> = observer(({id, name, type, image, favor}) => (\n  <button\n    className=\"pokemon-cart\"\n    onClick={() => {\n      // deepState(id);\n      pokemonsId.setIdPoki(id)\n      mobile.activeMobile()\n      if (favor) {\n        showHeart.heartDisable()\n        //setShowHeartDescr(false)\n      } else {\n        showHeart.heartActive()\n        //setShowHeartDescr(true)\n      }\n    }}>\n    <div>\n      <span>№{id}</span>\n    </div>\n    <div>\n      <img src={image} alt=\"pokemon\" />\n    </div>\n    <div>\n      <strong className=\"pokemon-cart__name\"> {name}</strong>\n    </div>\n\n    <div>Class: {type}</div>\n    {favor && (\n      <div className=\"pokemon-cart__heart \">\n        <img src={heart} alt=\"like\" />\n      </div>\n    )}\n  </button>\n))\n\nexport default PokemonCart\n","import {action, makeAutoObservable, observable, runInAction} from 'mobx'\n\nclass allPoki {\n  api = 'https://pokeapi.co/api/v2/pokemon?limit=20'\n  count = []\n  constructor() {\n    makeAutoObservable(this, {\n      count: observable,\n      getPoki: action,\n      falseFavor: action,\n      trueFavor: action\n    })\n  }\n\n\n  async getPoki() {\n    const res = await fetch(this.api)\n    const data = await res.json()\n    this.api = data.next\n\n    function createPokemonObject(results) {\n      results.forEach(async (pokemon) => {\n        const res = await fetch(\n          `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\n        )\n        const data = await res.json()\n\n        const resAbility = await fetch(\n          `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`\n        )\n        const dataAbility = await resAbility.json()\n        const dataAbilityDescr = dataAbility.effect_entries\n\n        data.abildesr = dataAbilityDescr\n\n        runInAction(() => {\n          this.count = [...this.count, data]\n          this.count.sort((a, b) => a.id - b.id)\n        })\n      })\n    }\n\n    createPokemonObject.call(this, data.results)\n  }\n  falseFavor(id) {\n    this.count[id - 1].favor = false\n  }\n\n  trueFavor(id) {\n    this.count[id - 1].favor = true\n  }\n}\n\nexport default new allPoki()\n","export default __webpack_public_path__ + \"static/media/loader.f67880ae.svg\";","import React from 'react'\nimport PokemonCart from './PokemonCart'\nimport allPoki from '../../store/allPoki'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport loader from '../../assets/loader.svg'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\nimport {observer} from 'mobx-react-lite'\n\nexport const SelectItems: React.FC<{\n  pokemonsList: IPoki[]\n  filter: string\n  favorites: IPokiFavor[]\n}> = observer(({pokemonsList, filter, favorites}) => {\n  const [q, setQ] = React.useState('') // это для поискового запроса\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  const pageEnd = React.useRef<any>()\n\n  React.useEffect(() => {\n    if (filter === 'All') {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          if (filter === 'All' && entries[0].isIntersecting) {\n            allPoki.getPoki()\n          }\n        },\n        {threshold: 1}\n      )\n\n      observer.observe(pageEnd.current)\n    }\n  }, [filter])\n\n  function search(pokemonsList: IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList: any) => {\n      if (\n        pokemonsList.types[0].type.name === filter ||\n        pokemonsList.abilities[0].ability.name === filter\n      ) {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      } else if (filter === 'All') {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      }\n    })\n  }\n\n  function renderFavorOrItems() {\n    if (favorItems.favorState) {\n      if (favorites.length > 0) {\n        return favorites.map((pokemon: IPokiFavor, index: number) => (\n          <PokemonCart\n            id={pokemon.id}\n            name={pokemon.name}\n            image={pokemon.image}\n            type={pokemon.type}\n            key={index}\n            favor={pokemon.favor}\n          />\n        ))\n      } else {\n        return <div> У вас тут пусто </div>\n      }\n    } else {\n      return (\n        <>\n          {search(pokemonsList).map((pokemon: IPoki, index: number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              favor={pokemon.favor}\n            />\n          ))}\n        </>\n      )\n    }\n  }\n\n  return (\n    <div className={mobile.mobileState ? 'selectItems mobile' : 'selectItems'}>\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {allPoki.count.length >= 19 ? (\n        renderFavorOrItems()\n      ) : (\n        <div>\n          <img src={loader} alt=\"loading\" />\n        </div>\n      )}\n      {filter === 'All' && (\n        <div className=\"download\" ref={pageEnd}>\n          <span>Загрузка...</span>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default SelectItems\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {IPoki} from '../../interface'\n\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const PokemonDescription: React.FC<{\n  id: number\n  name: string\n  image: string\n  type: string\n  ability: string\n  abilityDescr: string\n  favorites: (param: any) => void\n  allDescr: IPoki\n}> = observer(\n  ({id, name, image, type, ability, abilityDescr, favorites, allDescr}) => {\n    function addOrDeleteFavor(params: boolean) {\n      if (params) {\n        favorites((currentList: [{}]) => [\n          ...currentList,\n          {\n            id: id,\n            name: name,\n            image: image,\n            type: type,\n            favor: true,\n            ability: ability,\n            abilityDescr: abilityDescr\n          }\n        ])\n        showHeart.heartDisable()\n\n        //setShowHeartDescr(!params)\n      } else {\n        const todos = JSON.parse(localStorage.getItem('poki')!)\n\n        todos.forEach((item: IPoki, index: number) => {\n          if (item.id === id) {\n            todos.splice(index, 1)\n          }\n        })\n        favorites(todos)\n\n        showHeart.heartActive()\n        //setShowHeartDescr(!params)\n        //allDescr.favor = false\n        allPoki.falseFavor(id)\n      }\n    }\n    return (\n      <div>\n        <div\n          className={\n            mobile.mobileState ? 'view-description__mobile' : 'view-description'\n          }>\n          <div className=\"view-description__name\">{name}</div>\n          <div className=\"view-description__image\">\n            <img src={image} alt=\"\" />\n          </div>\n          <div className=\"view-description__type\">Class:{type}</div>\n          <div className=\"view-description__ability\">\n            Ability: <span>{ability}</span>\n          </div>\n          <div className=\"view-description__abilityDescr\"> {abilityDescr}</div>\n          <div className=\"view-description__heart\">\n            <div onClick={() => addOrDeleteFavor(showHeart.heart)}>\n              {\n                <img\n                  className={\n                    allDescr.favor\n                      ? 'view-description__heart--active'\n                      : 'view-description__heart--noactive'\n                  }\n                  src={heart}\n                  alt=\"heart\"\n                  onClick={() => {\n                    //allDescr.favor = true\n                    allPoki.trueFavor(id)\n                  }}\n                />\n              }\n            </div>\n            <div className=\"view-description__back\">\n              <span\n                onClick={() => {\n                  mobile.disableMobile()\n                }}>\n                Назад\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default PokemonDescription\n","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\nimport pokemonsId from '../../store/pokemonsID'\nimport {IPoki} from '../../interface'\nimport {observer} from 'mobx-react-lite'\nexport const View: React.FC<{\n  pokiDescription: IPoki\n  favorites: () => void\n}> = observer(({pokiDescription, favorites}) => {\n  function renderDescription() {}\n\n  return (\n    <div className=\"view\">\n      {pokemonsId.idPoki && (\n        <PokemonDescription\n          favorites={favorites}\n          allDescr={pokiDescription}\n          ability={pokiDescription.abilities[0].ability.name}\n          abilityDescr={pokiDescription.abildesr[1].effect}\n          id={pokiDescription.id}\n          name={pokiDescription.name}\n          image={pokiDescription.sprites.other.dream_world.front_default}\n          type={pokiDescription.types[0].type.name}\n        />\n      )}\n      {renderDescription()}\n    </div>\n  )\n})\n\nexport default View\n","import { useState } from 'react';\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: any,\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, {useState} from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from './useLocalStorage'\nimport {IPoki} from '../../interface'\n\nimport {observer} from 'mobx-react-lite'\nimport pokemonsId from '../../store/pokemonsID'\nimport allPoki from '../../store/allPoki'\n\nexport const Container: React.FC<{\n  pokemonsList: IPoki[]\n}> = observer(({pokemonsList}) => {\n  const [filter, setFilter] = useState('All')\n\n  const [favorites, setFavorites] = useLocalStorage('poki', [])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"wrapper\">\n        <Categories\n          setFilter={setFilter}\n          itemClass={['grass', 'normal', 'fire', 'water', 'bug']}\n          itemAbility={[\n            'overgroth',\n            'blaze',\n            'shield-dust',\n            'shed-skin',\n            'compound-eyes',\n            'swarm',\n            'keen-eye',\n            'run-away',\n            'torrent'\n          ]}\n        />\n        <SelectItems\n          pokemonsList={pokemonsList}\n          filter={filter}\n          favorites={favorites}\n        />\n        <View\n          pokiDescription={allPoki.count[pokemonsId.idPoki - 1]}\n          favorites={setFavorites}\n        />\n      </div>\n    </div>\n  )\n})\n\nexport default Container\n","import React from 'react'\nimport Container from '../Container/Container'\n\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const App: React.FC = observer(() => {\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!)\n    let favorPoki: number[] = []\n\n    if (a) {\n      a.forEach((item: any, index: number) => {\n        favorPoki[index] = item.id\n      })\n\n      allPoki.count.forEach((item, index) => {\n        if (favorPoki.includes(item.id)) {\n          allPoki.trueFavor(index + 1)\n        }\n      })\n    }\n  }\n\n  checkFavorPoki()\n\n  return (\n    <div className=\"App\">\n      <Container pokemonsList={allPoki.count} />\n    </div>\n  )\n})\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}