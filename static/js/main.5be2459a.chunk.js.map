{"version":3,"sources":["assets/logo.png","assets/ball-1.png","store/burger.ts","components/Container/Header.tsx","assets/Heart1.png","store/mobile.ts","store/favorItems.ts","store/pokemonsFilter.ts","components/Container/Categories.tsx","store/pokemonsID.ts","store/showHeart.ts","store/allPoki.ts","store/loadDescription.ts","components/Container/PokemonCart.tsx","assets/loader.svg","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["burgerState","makeAutoObservable","this","observable","setReverseState","action","Header","observer","className","src","ball","alt","logo","onClick","window","location","reload","burger","mobileState","activeMobile","disableMobile","favorState","favorActive","favorDisable","filter","setFilter","value","Categories","itemClass","itemAbility","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","favorItems","pokemonsFilter","heart","mobile","map","ability","index","idPoki","pokifavor","setIdPoki","param","heartActive","heartDisable","api","count","getPoki","falseFavor","trueFavor","a","fetch","res","json","data","next","createPokemonObject","call","results","forEach","pokemon","name","abilities","resAbility","dataAbility","dataAbilityDescr","effect_entries","abildesr","runInAction","sort","b","id","length","favor","loading","allPoki","favorOrNot","checkLocal","pokemonsID","description","JSON","parse","localStorage","getItem","poki","console","log","PokemonCart","type","image","pokemonsId","load","showHeart","SelectItems","pokemonsList","favorites","q","setQ","searchParam","pageEnd","useRef","search","types","some","newItem","toString","toLowerCase","indexOf","useEffect","IntersectionObserver","entries","isIntersecting","threshold","observe","current","htmlFor","placeholder","onChange","e","target","sprites","other","dream_world","front_default","loader","ref","PokemonDescription","abilityDescr","allDescr","params","currentList","todos","item","splice","addOrDeleteFavor","View","pokiDescription","loadDescription","effect","useLocalStorage","key","initialValue","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setFavorites","App","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5be2459a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass burger {\n  burgerState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      burgerState: observable,\n      setReverseState: action\n    })\n  }\n  setReverseState() {\n    this.burgerState = !this.burgerState\n  }\n}\n\nexport default new burger()\n","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\n\nexport const Header: React.FC<{}> = observer(() => {\n  return (\n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img\n          src={logo}\n          alt=\"pokemon\"\n          onClick={() => window.location.reload()}\n        />\n      </div>\n\n      <div className=\"burger-menu\">\n        <span></span>\n      </div>\n\n      <div\n        className=\"burger-menu\"\n        onClick={() => {\n          burger.setReverseState()\n        }}>\n        <span></span>\n      </div>\n    </div>\n  )\n})\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass mobile {\n  mobileState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      mobileState: observable,\n      setReverseState: action,\n      activeMobile: action,\n      disableMobile: action\n    })\n  }\n  setReverseState() {\n    this.mobileState = !this.mobileState\n  }\n  activeMobile() {\n    this.mobileState = true\n  }\n\n  disableMobile() {\n    this.mobileState = false\n  }\n}\n\nexport default new mobile()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass favorItems {\n  favorState = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      favorState: observable,\n      favorActive: action,\n      favorDisable: action\n    })\n  }\n\n  favorActive() {\n    this.favorState = true\n  }\n\n  favorDisable() {\n    this.favorState = false\n  }\n}\n\nexport default new favorItems()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass pokemonsFilter {\n  filter = 'All'\n\n  constructor() {\n    makeAutoObservable(this, {\n      filter: observable,\n      setFilter: action\n    })\n  }\n\n  setFilter(value: string) {\n    this.filter = value\n  }\n}\n\nexport default new pokemonsFilter()","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {observer} from 'mobx-react-lite'\nimport burger from '../../store/burger'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\nimport pokemonsFilter from '../../store/pokemonsFilter'\n\nexport const Categories: React.FC<{\n\n  itemClass: string[]\n  itemAbility: string[]\n}> = observer(\n  ({\n    itemClass,\n    itemAbility\n  }) => {\n    const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n    const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n    return (\n      <div className={burger.burgerState ? 'categories active' : 'categories'}>\n        <div\n          className=\"categories-favorites__wrapper\"\n          onClick={() => {\n            favorItems.favorActive()\n            //setFavoritesVisible(true)\n            pokemonsFilter.setFilter('')\n          }}>\n          <img className=\"categories-img\" src={heart} alt=\"heart\" />\n          <div\n            className=\"categories-favorites\"\n            onClick={() => {\n              burger.burgerState = false\n              mobile.disableMobile()\n            }}>\n            Избранное\n          </div>\n        </div>\n\n        <div className=\"title\">Категории</div>\n\n        <ul className=\"categoriesList\">\n          <li\n            onClick={() => {\n              pokemonsFilter.setFilter('All')\n              favorItems.favorDisable()\n              //setFavoritesVisible(false)\n              burger.burgerState = false\n              mobile.disableMobile()\n            }}>\n            Все покемоны\n          </li>\n          <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n            Классы\n            {visibleAbilites && (\n              <ul>\n                {itemClass.map((ability, index) => (\n                  <li\n                    key={`${ability}_${index}`}\n                    onClick={() => {\n                      pokemonsFilter.setFilter(`${ability}`)\n                      favorItems.favorDisable()\n                      //setFavoritesVisible(false)\n                      burger.burgerState = false\n                      mobile.disableMobile()\n                    }}>\n                    {ability}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n          <li onClick={() => setVisibleClass(!visibleClass)}>\n            Cпособности\n            {visibleClass && (\n              <ul>\n                {itemAbility.map((ability, index) => (\n                  <li\n                    key={`${ability}_${index}`}\n                    onClick={() => {\n                      pokemonsFilter.setFilter(`${ability}`)\n                      favorItems.favorDisable()\n                      //setFavoritesVisible(false)\n                      burger.burgerState = false\n                      mobile.disableMobile()\n                    }}>\n                    {ability}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </li>\n        </ul>\n      </div>\n    )\n  }\n)\nexport default Categories\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass pokemonsID {\n  idPoki = 0\n  pokifavor = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      idPoki: observable,\n      setIdPoki: action\n    })\n  }\n\n\n  setIdPoki(value:number,param:boolean) {\n    this.idPoki = value\n    this.pokifavor = param;\n  }\n  \n\n}\n\nexport default new pokemonsID()\n","import {action, makeAutoObservable, observable} from 'mobx'\n\nclass showHeart {\n  heart = true\n\n  constructor() {\n    makeAutoObservable(this, {\n      heart: observable,\n      heartActive: action,\n      heartDisable: action\n    })\n  }\n\n  heartActive() {\n    this.heart = true\n  }\n\n  heartDisable() {\n    this.heart = false\n  }\n}\n\nexport default new showHeart()\n","import {action, makeAutoObservable, observable, runInAction} from 'mobx'\nimport {IPoki} from '../interface'\n\nclass allPoki {\n  api = 'https://pokeapi.co/api/v2/pokemon?limit=20'\n  count: IPoki[] = []\n\n  constructor() {\n    makeAutoObservable(this, {\n      count: observable,\n      getPoki: action,\n      falseFavor: action,\n      trueFavor: action\n    })\n  }\n\n  async getPoki() {\n    const res = await fetch(this.api)\n    const data = await res.json()\n    this.api = data.next\n    this.createPokemonObject([])\n    this.createPokemonObject.call(this, data.results)\n  }\n\n  createPokemonObject(results: IPoki[]) {\n    results.forEach(async (pokemon) => {\n      const res = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/${pokemon.name}`\n      )\n      const data = await res.json()\n\n      const resAbility = await fetch(\n        `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`\n      )\n      const dataAbility = await resAbility.json()\n      const dataAbilityDescr = dataAbility.effect_entries\n\n      data.abildesr = dataAbilityDescr\n\n      runInAction(() => {\n        this.count = [...this.count, data]\n        this.count.sort((a: IPoki, b: IPoki) => a.id - b.id)\n      })\n    })\n  }\n\n  falseFavor(id: number) {\n    if (id < this.count.length) {\n      this.count[id - 1].favor = false\n    }\n  }\n\n  trueFavor(id: number) {\n    if (id < this.count.length) {\n      this.count[id - 1].favor = true\n    }\n  }\n}\n\nexport default new allPoki()\n","import {action, makeAutoObservable, observable} from 'mobx'\nimport pokemonsID from './pokemonsID'\nimport allPoki from '../store/allPoki'\n\nclass loadDescription {\n  loading:number = 0;\n  mobileState:any = allPoki.count[0];\n  favorOrNot:boolean = false\n\n  constructor() {\n    makeAutoObservable(this, {\n      mobileState: observable,\n      loading: observable,\n      checkLocal: action\n    })\n  }\n\n  checkLocal() {\n\n    if(pokemonsID.pokifavor) {\n      const description = JSON.parse(localStorage.getItem('poki')!).filter((poki:any) => poki.id === pokemonsID.idPoki)\n      let a = description\n      this.mobileState  = description\n      console.log(a)\n      this.loading = 1\n    }\n    else {\n      this.mobileState = allPoki.count[pokemonsID.idPoki - 1]\n      this.loading = 2\n    }\n\n  }\n\n}\n\nexport default new loadDescription()\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\nimport pokemonsId from '../../store/pokemonsID'\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport load from '../../store/loadDescription'\nimport {observer} from 'mobx-react-lite'\nexport const PokemonCart: React.FC<{\n  id: number\n  name: string\n  type: string\n  image: string\n\n  favor: boolean\n}> = observer(({id, name, type, image, favor}) => (\n  <button\n    className=\"pokemon-cart\"\n    onClick={() => {\n      // deepState(id);\n      pokemonsId.setIdPoki(id, favor)\n      mobile.activeMobile()\n      load.checkLocal()\n      if (favor) {\n        showHeart.heartDisable()\n        //setShowHeartDescr(false)\n      } else {\n        showHeart.heartActive()\n        //setShowHeartDescr(true)\n      }\n    }}>\n    <div>\n      <span>№{id}</span>\n    </div>\n    <div>\n      <img src={image} alt=\"pokemon\" />\n    </div>\n    <div>\n      <strong className=\"pokemon-cart__name\"> {name}</strong>\n    </div>\n\n    <div>Class: {type}</div>\n    {favor && (\n      <div className=\"pokemon-cart__heart \">\n        <img src={heart} alt=\"like\" />\n      </div>\n    )}\n  </button>\n))\n\nexport default PokemonCart\n","export default __webpack_public_path__ + \"static/media/loader.f67880ae.svg\";","import React from 'react'\nimport PokemonCart from './PokemonCart'\nimport allPoki from '../../store/allPoki'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport loader from '../../assets/loader.svg'\nimport mobile from '../../store/mobile'\nimport favorItems from '../../store/favorItems'\nimport {observer} from 'mobx-react-lite'\nimport pokemonsFilter from '../../store/pokemonsFilter'\n\nexport const SelectItems: React.FC<{\n  pokemonsList: IPoki[]\n  favorites: IPokiFavor[]\n}> = observer(({pokemonsList, favorites}) => {\n  const [q, setQ] = React.useState('') // это для поискового запроса\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  const pageEnd = React.useRef<any>()\n\n  React.useEffect(() => {\n    if (pokemonsFilter.filter === 'All') {\n      const observer = new IntersectionObserver(\n        (entries) => {\n          if (pokemonsFilter.filter === 'All' && entries[0].isIntersecting) {\n            allPoki.getPoki()\n          }\n        },\n        {threshold: 1}\n      )\n\n      observer.observe(pageEnd.current)\n    } // eslint-disable-next-line\n  }, [pokemonsFilter.filter])\n\n  function search(pokemonsList: IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList: any) => {\n      if (\n        pokemonsList.types[0].type.name === pokemonsFilter.filter ||\n        pokemonsList.abilities[0].ability.name === pokemonsFilter.filter\n      ) {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      } else if (pokemonsFilter.filter === 'All') {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      }\n    })\n  }\n\n  function renderFavorOrItems() {\n    if (favorItems.favorState) {\n      if (favorites.length > 0) {\n        return favorites.map((pokemon: IPokiFavor, index: number) => (\n          <PokemonCart\n            id={pokemon.id}\n            name={pokemon.name}\n            image={pokemon.image}\n            type={pokemon.type}\n            key={index}\n            favor={pokemon.favor}\n          />\n        ))\n      } else {\n        return <div> У вас тут пусто </div>\n      }\n    } else {\n      return (\n        <>\n          {search(pokemonsList).map((pokemon: IPoki, index: number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              favor={pokemon.favor}\n            />\n          ))}\n        </>\n      )\n    }\n  }\n\n  return (\n    <div className={mobile.mobileState ? 'selectItems mobile' : 'selectItems'}>\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {allPoki.count.length >= 19 ? (\n        renderFavorOrItems()\n      ) : (\n        <div>\n          <img src={loader} alt=\"loading\" />\n        </div>\n      )}\n      {pokemonsFilter.filter === 'All' && (\n        <div className=\"download\" ref={pageEnd}>\n          <span>Загрузка...</span>\n        </div>\n      )}\n    </div>\n  )\n})\n\nexport default SelectItems\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport {IPoki, IPokiFavor} from '../../interface'\n\nimport mobile from '../../store/mobile'\nimport showHeart from '../../store/showHeart'\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const PokemonDescription: React.FC<{\n  id: number\n  name: string\n  image: string\n  type: string\n  ability: string\n  abilityDescr: string\n  favorites: (param: any) => void\n  allDescr: IPoki | IPokiFavor\n}> = observer(\n  ({id, name, image, type, ability, abilityDescr, favorites, allDescr}) => {\n    function addOrDeleteFavor(params: boolean) {\n      if (params) {\n        favorites((currentList: [{}]) => [\n          ...currentList,\n          {\n            id: id,\n            name: name,\n            image: image,\n            type: type,\n            favor: true,\n            ability: ability,\n            abilityDescr: abilityDescr\n          }\n        ])\n        showHeart.heartDisable()\n\n      //setShowHeartDescr(!params)\n    } else {\n      const todos = JSON.parse(localStorage.getItem('poki')!)\n\n\n        todos.forEach((item: IPoki | IPokiFavor, index: number) => {\n          if (item.id === id) {\n            todos.splice(index, 1)\n          }\n        })\n        favorites(todos)\n\n      showHeart.heartActive()\n      //setShowHeartDescr(!params)\n      //allDescr.favor = false\n      allPoki.falseFavor(id)\n    }\n  }\n  return (\n    <div>\n      <div\n        className={\n          mobile.mobileState ? 'view-description__mobile' : 'view-description'\n        }>\n        <div className=\"view-description__name\">{name}</div>\n        <div className=\"view-description__image\">\n          <img src={image} alt=\"\" />\n        </div>\n        <div className=\"view-description__type\">Class:{type}</div>\n        <div className=\"view-description__ability\">\n          Ability: <span>{ability}</span>\n        </div>\n        <div className=\"view-description__abilityDescr\"> {abilityDescr}</div>\n        <div className=\"view-description__heart\">\n          <div onClick={() => addOrDeleteFavor(showHeart.heart)}>\n            {\n              <img\n                className={\n                  allDescr.favor\n                    ? 'view-description__heart--active'\n                    : 'view-description__heart--noactive'\n                }\n                src={heart}\n                alt=\"heart\"\n                onClick={() => {\n                  //allDescr.favor = true\n                  allPoki.trueFavor(id)\n                }}\n              />\n            }\n          </div>\n          <div className=\"view-description__back\">\n            <span\n              onClick={() => {\n                mobile.disableMobile()\n              }}>\n              Назад\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n})\n\nexport default PokemonDescription\n","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\n\nimport loadDescription from '../../store/loadDescription'\n\nimport {observer} from 'mobx-react-lite'\n\nexport const View: React.FC<{\n\n  pokiDescription: number\n  favorites: () => void\n}> = observer(({pokiDescription, favorites}) => {\n  function renderDescription() {\n    if (pokiDescription === 0) {\n      return <div>Нажмите на покемона</div>\n    } else if (pokiDescription === 2) {\n      return (\n        <>\n          <PokemonDescription\n            favorites={favorites}\n            allDescr={loadDescription.mobileState}\n            ability={loadDescription.mobileState.abilities[0].ability.name}\n            abilityDescr={loadDescription.mobileState.abildesr[1].effect}\n            id={loadDescription.mobileState.id}\n            name={loadDescription.mobileState.name}\n            image={\n              loadDescription.mobileState.sprites.other.dream_world\n                .front_default\n            }\n            type={loadDescription.mobileState.types[0].type.name}\n          />\n        </>\n      )\n    } else {\n      return (\n        <>\n          <PokemonDescription\n            favorites={favorites}\n            allDescr={loadDescription.mobileState[0]}\n            ability={loadDescription.mobileState[0].ability}\n            abilityDescr={loadDescription.mobileState[0].abilityDescr}\n            id={loadDescription.mobileState[0].id}\n            name={loadDescription.mobileState[0].name}\n            image={loadDescription.mobileState[0].image}\n            type={loadDescription.mobileState[0].type}\n          />\n        </>\n      )\n    }\n  }\n\n  return <div className=\"view\">{renderDescription()}</div>\n})\n\nexport default View\n\n//pokemonsId.idPoki\n\n// return (\n//   pokemonsId.idPoki && (\n/* <PokemonDescription\n  favorites={favorites}\n  allDescr={pokiDescription}\n  ability={pokiDescription.abilities[0].ability.name}\n  abilityDescr={pokiDescription.abildesr[1].effect}\n  id={pokiDescription.id}\n  name={pokiDescription.name}\n  image={pokiDescription.sprites.other.dream_world.front_default}\n  type={pokiDescription.types[0].type.name}\n/> */\n//   )\n// )\n","import { useState } from 'react';\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: any,\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from './useLocalStorage'\nimport {IPoki} from '../../interface'\n\nimport load from '../../store/loadDescription'\nimport {observer} from 'mobx-react-lite'\n\nexport const Container: React.FC<{\n  pokemonsList: IPoki[]\n}> = observer(({pokemonsList}) => {\n\n  const [favorites, setFavorites] = useLocalStorage('poki', [])\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <div className=\"wrapper\">\n        <Categories\n          itemClass={['grass', 'normal', 'fire', 'water', 'bug']}\n          itemAbility={[\n            'overgroth',\n            'blaze',\n            'shield-dust',\n            'shed-skin',\n            'compound-eyes',\n            'swarm',\n            'keen-eye',\n            'run-away',\n            'torrent'\n          ]}\n        />\n\n        <SelectItems pokemonsList={pokemonsList} favorites={favorites} />\n        <View pokiDescription={load.loading} favorites={setFavorites} />\n      </div>\n    </div>\n  )\n})\n\nexport default Container\n","import React from 'react'\nimport Container from '../Container/Container'\n\nimport allPoki from '../../store/allPoki'\nimport {observer} from 'mobx-react-lite'\n\nexport const App: React.FC = observer(() => {\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!)\n    let favorPoki: number[] = []\n\n    if (a) {\n      a.forEach((item: any, index: number) => {\n        favorPoki[index] = item.id\n      })\n\n      allPoki.count.forEach((item, index) => {\n        if (favorPoki.includes(item.id)) {\n          allPoki.trueFavor(index + 1)\n        }\n      })\n    }\n  }\n\n  checkFavorPoki()\n\n  return (\n    <div className=\"App\">\n      <Container pokemonsList={allPoki.count} />\n    </div>\n  )\n})\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}