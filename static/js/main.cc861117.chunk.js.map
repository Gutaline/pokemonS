{"version":3,"sources":["assets/logo.png","assets/ball-1.png","components/Container/Header.tsx","assets/Heart1.png","components/Container/Categories.tsx","components/Container/PokemonCart.tsx","components/Container/SelectItems.tsx","components/Container/PokemonDescription.tsx","components/Container/View.tsx","components/Container/useLocalStorage.ts","components/Container/Container.tsx","components/App/App.tsx","index.tsx"],"names":["Header","burger","setBurger","className","src","ball","alt","logo","onClick","Categories","setMobile","setFilter","setFavoritesVisible","itemClass","itemAbility","React","useState","visibleAbilites","setVisibleAbilites","visibleClass","setVisibleClass","heart","map","ability","index","PokemonCart","id","name","type","image","deepState","favor","setShowHeartDescr","SelectItems","pokemonsList","filter","favorites","favoritesVisible","mobile","q","setQ","searchParam","htmlFor","placeholder","value","onChange","e","target","length","pokemon","types","abilities","some","newItem","toString","toLowerCase","indexOf","search","sprites","other","dream_world","front_default","PokemonDescription","abilityDescr","showHeartDescr","allDescr","params","currentList","todos","JSON","parse","localStorage","getItem","forEach","item","splice","addOrDeleteFavor","View","myState","pokiDescription","abildesr","effect","useLocalStorage","key","initialValue","window","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","Container","setMyState","setFavorites","App","allPokemons","setAllPokemons","loadMore","setLoadMore","getAllPokemons","createPokemonObject","a","results","fetch","res","json","data","resAbility","dataAbility","dataAbilityDescr","effect_entries","currenList","next","sort","b","useEffect","favorPoki","includes","checkFavorPoki","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAAe,MAA0B,iCCA1B,MAA0B,mC,OC8B1BA,EAvBV,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAGZ,OAEE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBAAKC,IAAKC,EAAMC,IAAI,WAEtB,qBAAKH,UAAU,uBAAf,SACE,qBAAKC,IAAKG,EAAMD,IAAI,cAGpB,qBAAKH,UAAY,cAAcK,QAAW,WAAMN,GAAWD,IAA3D,SACE,+BCrBK,MAA0B,mCCqG1BQ,EA1FV,SAAC,GAQC,IAPLC,EAOI,EAPJA,UACAR,EAMI,EANJA,UACAS,EAKI,EALJA,UACAC,EAII,EAJJA,oBACAX,EAGI,EAHJA,OACAY,EAEI,EAFJA,UACAC,EACI,EADJA,YAEA,EAA8CC,IAAMC,UAAS,GAA7D,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAwCH,IAAMC,UAAS,GAAvD,mBAAOG,EAAP,KAAqBC,EAArB,KAEA,OACE,sBAAKjB,UAAWF,EAAS,oBAAsB,aAA/C,UACE,sBACEE,UAAU,gCACVK,QAAS,WACPI,GAAoB,IAHxB,UAME,qBAAKT,UAAU,iBAAiBC,IAAKiB,EAAOf,IAAI,UAChD,qBACEH,UAAU,uBACVK,QAAS,WACPN,GAAU,GACVQ,GAAU,IAJd,uEAWF,qBAAKP,UAAU,QAAf,oEAEA,qBAAIA,UAAU,iBAAd,UACE,oBACEK,QAAS,WACPG,EAAU,OACVC,GAAoB,GACpBV,GAAU,GACVQ,GAAU,IALd,iFAUA,qBAAIF,QAAS,kBAAMU,GAAoBD,IAAvC,iDAEGA,GACC,6BACGJ,EAAUS,KAAI,SAACC,EAASC,GAAV,OACb,oBAEEhB,QAAS,WACPG,EAAU,GAAD,OAAIY,IACbX,GAAoB,GACpBV,GAAU,GACVQ,GAAU,IANd,SASGa,GATH,UACUA,EADV,YACqBC,YAc7B,qBAAIhB,QAAS,kBAAMY,GAAiBD,IAApC,0EAEGA,GACC,6BACGL,EAAYQ,KAAI,SAACC,EAASC,GAAV,OACf,oBAEEhB,QAAS,WACPG,EAAU,GAAD,OAAIY,IACbX,GAAoB,GACpBV,GAAU,GACVQ,GAAU,IANd,SASGa,GATH,UACUA,EADV,YACqBC,mBCxCtBC,EA7BV,SAAC,GAAD,IAAEC,EAAF,EAAEA,GAAGC,EAAL,EAAKA,KAAKC,EAAV,EAAUA,KAAKC,EAAf,EAAeA,MAAMC,EAArB,EAAqBA,UAAUC,EAA/B,EAA+BA,MAAMC,EAArC,EAAqCA,kBAAkBtB,EAAvD,EAAuDA,UAAvD,OAGG,yBAAQP,UAAW,eAAeK,QAAW,WAEzCsB,EAAUJ,GACVhB,GAAU,GAENsB,GADDD,IAJP,UAWG,8BAAK,0CAAQL,OACb,8BAAM,qBAAKtB,IAAKyB,EAAOvB,IAAI,cAC1B,8BACI,yBAAQH,UAAY,qBAApB,cAA2CwB,OAIhD,0CAAaC,KACRG,GAAS,qBAAK5B,UAAY,uBAAjB,SAA0C,qBAAKC,IAAKiB,EAAOf,IAAI,eCsEzE2B,EA1FT,SAAC,GAAsG,IAApGC,EAAmG,EAAnGA,aAAcJ,EAAqF,EAArFA,UAAWK,EAA0E,EAA1EA,OAAOC,EAAmE,EAAnEA,UAAUC,EAAyD,EAAzDA,iBAAiBL,EAAwC,EAAxCA,kBAAkBtB,EAAsB,EAAtBA,UAAU4B,EAAY,EAAZA,OAC9F,EAAkBvB,IAAMC,SAAS,IAAjC,mBAAOuB,EAAP,KAAUC,EAAV,KACA,EAAsBzB,IAAMC,SAAS,CAAC,SAA/ByB,EAAP,oBAmEA,OACE,sBAAKtC,UAAWmC,EAAQ,qBAAuB,cAA/C,UACE,qBAAKnC,UAAU,iBAAf,SACE,uBAAOuC,QAAQ,cAAf,SACE,uBACEd,KAAK,SACLD,KAAK,cACLD,GAAG,cACHvB,UAAU,eACVwC,YAAY,gBACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAKM,EAAEC,OAAOH,cAhDhCP,EACID,EAAUY,OAAS,EACfZ,EAAUd,KAAI,SAAC2B,EAAmBzB,GAApB,OACnB,cAAC,EAAD,CACAE,GAAIuB,EAAQvB,GACZC,KAAMsB,EAAQtB,KACdE,MAAOoB,EAAQpB,MACfD,KAAMqB,EAAQrB,KAEdE,UAAWA,EACXC,MAAOkB,EAAQlB,MACfC,kBAAsBA,EACtBtB,UAAaA,GAJRc,MAQS,kHA5C1B,SAAgBU,GAEd,OAAOA,EAAaC,QAAO,SAACD,GAC1B,OACEA,EAAagB,MAAM,GAAGtB,KAAKD,OAASQ,GACpCD,EAAaiB,UAAU,GAAG5B,QAAQI,OAASQ,GAUvB,QAAXA,EARFM,EAAYW,MAAK,SAACC,GACvB,OACEnB,EAAamB,GACVC,WACAC,cACAC,QAAQjB,EAAEgB,gBAAkB,UAG9B,KA+BIE,CAAOvB,GAAcZ,KAAI,SAAC2B,EAAczB,GAAf,OAC9B,cAAC,EAAD,CACEE,GAAIuB,EAAQvB,GACZC,KAAMsB,EAAQtB,KACdE,MAAOoB,EAAQS,QAAQC,MAAMC,YAAYC,cACzCjC,KAAMqB,EAAQC,MAAM,GAAGtB,KAAKD,KAE5BG,UAAWA,EACXC,MAAOkB,EAAQlB,MACfC,kBAAsBA,EACtBtB,UAAaA,GAJRc,UCyBJsC,EA9EV,SAAC,GAaC,IAZLpC,EAYI,EAZJA,GACAC,EAWI,EAXJA,KACAE,EAUI,EAVJA,MACAD,EASI,EATJA,KACAL,EAQI,EARJA,QACAwC,EAOI,EAPJA,aACA3B,EAMI,EANJA,UACA4B,EAKI,EALJA,eACAhC,EAII,EAJJA,kBACAiC,EAGI,EAHJA,SACA3B,EAEI,EAFJA,OACA5B,EACI,EADJA,UAsBA,OACE,8BACE,sBAAKP,UAAWmC,EAAS,2BAA6B,mBAAtD,UACE,qBAAKnC,UAAU,yBAAf,SAAyCwB,IACzC,qBAAKxB,UAAU,0BAAf,SACE,qBAAKC,IAAKyB,EAAOvB,IAAI,OAEvB,sBAAKH,UAAU,yBAAf,mBAA+CyB,KAC/C,sBAAKzB,UAAU,4BAAf,sBACW,+BAAOoB,OAElB,sBAAKpB,UAAU,iCAAf,cAAkD4D,KAClD,sBAAK5D,UAAU,0BAAf,UACE,qBAAKK,QAAS,kBAjCtB,SAA0B0D,GACxB,GAAIA,EACF9B,GAAU,SAAC+B,GAAD,4BACLA,GADK,CAER,CAAEzC,GAAIA,EAAIC,KAAMA,EAAME,MAAOA,EAAOD,KAAMA,EAAMG,OAAO,QAEzDC,GAAmBkC,OACd,CACL,IAAME,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,SAE9CJ,EAAMK,SAAQ,SAACC,EAAalD,GACtBkD,EAAKhD,KAAOA,GACd0C,EAAMO,OAAOnD,EAAO,MAGxBY,EAAUgC,GACVpC,GAAmBkC,GACnBD,EAASlC,OAAQ,GAgBO6C,CAAiBZ,IAArC,SAEI,qBACE7D,UACE8D,EAASlC,MACL,kCACA,oCAEN3B,IAAKiB,EACLf,IAAI,QACJE,QAAS,WACPyD,EAASlC,OAAQ,OAKzB,qBAAK5B,UAAU,yBAAf,SACE,sBACEK,QAAS,WACPE,GAAU,IAFd,uDCxCGmE,EA3BX,SAAC,GAA2F,IAA1FC,EAAyF,EAAzFA,QAAQC,EAAiF,EAAjFA,gBAAgB3C,EAAiE,EAAjEA,UAAU4B,EAAuD,EAAvDA,eAAehC,EAAwC,EAAxCA,kBAAkBM,EAAsB,EAAtBA,OAAO5B,EAAe,EAAfA,UAG9E,OAEE,qBAAMP,UAAY,OAAlB,SACG2E,GACC,cAAC,EAAD,CACA1C,UAAaA,EACb6B,SAAYc,EACZxD,QAAWwD,EAAgB5B,UAAU,GAAG5B,QAAQI,KAChDoC,aAAgBgB,EAAgBC,SAAS,GAAGC,OAC5CvD,GAAMqD,EAAgBrD,GACtBC,KAAQoD,EAAgBpD,KACxBE,MAASkD,EAAgBrB,QAAQC,MAAMC,YAAYC,cACnDjC,KAAQmD,EAAgB7B,MAAM,GAAGtB,KAAKD,KACtCqC,eAAkBA,EAClBhC,kBAAqBA,EACrBM,OAAUA,EACV5B,UAAaA,OCKNwE,EArCgB,SAC3BC,EACAC,GAGF,MAAsCpE,oBAAS,WAC7C,IAEE,IAAM0D,EAAOW,OAAOd,aAAaC,QAAQW,GAEzC,OAAOT,EAAOL,KAAKC,MAAMI,GAAQU,EACjC,MAAOE,GAGP,OADAC,QAAQC,IAAIF,GACLF,MATX,mBAAOK,EAAP,KAAoBC,EAApB,KA6BA,MAAO,CAACD,EAdS,SAAC7C,GAChB,IAEE,IAAM+C,EAAe/C,aAAiBgD,SAAWhD,EAAM6C,GAAe7C,EAEtE8C,EAAeC,GAEfN,OAAOd,aAAasB,QAAQV,EAAKd,KAAKyB,UAAUH,IAChD,MAAOL,GAEPC,QAAQC,IAAIF,OCuCHS,EA5DV,SAAC,GAAsB,IAApB7D,EAAmB,EAAnBA,aACN,EAA8BlB,qBAA9B,mBAAO8D,EAAP,KAAgBkB,EAAhB,KACA,EAA4BhF,mBAAS,OAArC,mBAAOmB,EAAP,KAAexB,EAAf,KAEA,EAA4BK,oBAAS,GAArC,mBAAOsB,EAAP,KAAe5B,EAAf,KAEA,EAAgDM,oBAAS,GAAzD,mBAAOqB,EAAP,KAAyBzB,EAAzB,KAEA,EAAkCsE,EAAgB,OAAQ,IAA1D,mBAAO9C,EAAP,KAAkB6D,EAAlB,KAEA,EAA4CjF,oBAAS,GAArD,mBAAOgD,EAAP,KAAuBhC,EAAvB,KACA,EAA4BhB,oBAAS,GAArC,mBAAOf,EAAP,KAAeC,EAAf,KAEA,OACE,sBAAKC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQF,OAAQA,EAAQC,UAAWA,IACnC,sBAAKC,UAAU,UAAf,UACE,cAAC,EAAD,CACEQ,UAAWA,EACXC,oBAAqBA,EACrBX,OAAQA,EACRC,UAAWA,EACXQ,UAAWA,EACXG,UAAW,CAAC,QAAS,SAAU,OAAQ,QAAS,OAChDC,YAAa,CACX,YACA,QACA,cACA,YACA,gBACA,QACA,WACA,WACA,aAGJ,cAAC,EAAD,CACEoB,aAAcA,EACdJ,UAAWkE,EACX7D,OAAQA,EACRC,UAAWA,EACXC,iBAAkBA,EAClBL,kBAAmBA,EACnBtB,UAAWA,EACX4B,OAAQA,IAEV,cAAC,EAAD,CACEwC,QAASA,EACTC,gBAAiB7C,EAAa4C,EAAU,GACxC1C,UAAW6D,EACXjC,eAAgBA,EAChBhC,kBAAmBA,EACnBM,OAAQA,EACR5B,UAAWA,WCaNwF,EArEa,WAE1B,MAAsClF,mBAAkB,IAAxD,mBAAOmF,EAAP,KAAoBC,EAApB,KACA,EAAgCpF,mBAAS,8CAAzC,mBAAOqF,EAAP,KAAiBC,EAAjB,KAEMC,EAAc,uCAAG,qBAMNC,EANM,WAAAC,EAAA,iGAAAA,EAAA,MAMrB,WAAmCC,GAAnC,SAAAD,EAAA,sDACEC,EAAQjC,QAAR,uCAAgB,WAAMxB,GAAN,uBAAAwD,EAAA,sEACIE,MAAM,qCAAD,OAAsC1D,EAAQtB,OADvD,cACRiF,EADQ,gBAEKA,EAAIC,OAFT,cAERC,EAFQ,gBAIWH,MAAM,qCAAD,OACSG,EAAK3D,UAAU,GAAG5B,QAAQI,OALnD,cAIRoF,EAJQ,iBAOYA,EAAWF,OAPvB,QAORG,EAPQ,OAQRC,EAAmBD,EAAYE,eAErCJ,EAAK9B,SAAWiC,EAEhBb,GAAe,SAAAe,GAAU,4BAAQA,GAAR,CAAoBL,OAZ/B,4CAAhB,uDADF,4CANqB,uBAMNN,EANM,qDACHG,MAAMN,GADH,cACfO,EADe,gBAEFA,EAAIC,OAFF,OAEfC,EAFe,OAIrBR,EAAYQ,EAAKM,MAmBjBZ,EAAoBM,EAAKJ,SAvBJ,4CAAH,qDAwDpB,OA5BAP,EAAYkB,MAAK,SAACZ,EAAGa,GAAJ,OAAUb,EAAE/E,GAAK4F,EAAE5F,MAEpC6F,qBAAU,WACRhB,MAGC,IAEH,WACE,IAAME,EAAIpC,KAAKC,MAAMC,aAAaC,QAAQ,SACtCgD,EAAqB,GAErBf,IACFA,EAAEhC,SAAQ,SAACC,EAAUlD,GACnBgG,EAAUhG,GAASkD,EAAKhD,MAG1ByE,EAAY1B,SAAQ,SAAAC,GACd8C,EAAUC,SAAS/C,EAAKhD,MAC1BgD,EAAK3C,OAAQ,OAMrB2F,GAIE,qBAAKvH,UAAU,MAAf,SACE,cAAC,EAAD,CAAW+B,aAAciE,OCjE/BwB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc861117.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0444b39a.png\";","export default __webpack_public_path__ + \"static/media/ball-1.49e2fb42.png\";","import React from 'react'\nimport logo from '../../assets/logo.png'\nimport ball from '../../assets/ball-1.png'\n\nexport const Header: React.FC<{\n  burger: boolean\n  setBurger: (burger: boolean) => void\n}> = ({burger,setBurger}) => {\n \n\n  return (\n    \n    <div className=\"header\">\n      <div className=\"header-logo_ball\">\n        <img src={ball} alt=\"ball\" />\n      </div>\n      <div className=\"header-logo__pokeman\">\n        <img src={logo} alt=\"pokemon\" />\n      </div>\n      \n        <div className = \"burger-menu\" onClick = {() =>{setBurger(!burger)}}>\n          <span></span>\n        </div>\n      \n  \n    </div>\n    \n  )\n}\n\nexport default Header\n","export default __webpack_public_path__ + \"static/media/Heart1.c0316ea0.png\";","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const Categories: React.FC<{\n  setMobile: (par: boolean) => void\n  setBurger: (par: boolean) => void\n  setFilter: (param: string) => void\n  setFavoritesVisible: (p: boolean) => void\n  burger: boolean\n  itemClass: string[]\n  itemAbility: string[]\n}> = ({\n  setMobile,\n  setBurger,\n  setFilter,\n  setFavoritesVisible,\n  burger,\n  itemClass,\n  itemAbility,\n}) => {\n  const [visibleAbilites, setVisibleAbilites] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n  const [visibleClass, setVisibleClass] = React.useState(false) // Эти стейты нужны ,Чтобы кнопки выдвигались\n\n  return (\n    <div className={burger ? 'categories active' : 'categories'}>\n      <div\n        className=\"categories-favorites__wrapper\"\n        onClick={() => {\n          setFavoritesVisible(true)\n        }}\n      >\n        <img className=\"categories-img\" src={heart} alt=\"heart\" />\n        <div\n          className=\"categories-favorites\"\n          onClick={() => {\n            setBurger(false)\n            setMobile(false)\n          }}\n        >\n          Избранное\n        </div>\n      </div>\n\n      <div className=\"title\">Категории</div>\n\n      <ul className=\"categoriesList\">\n        <li\n          onClick={() => {\n            setFilter('All')\n            setFavoritesVisible(false)\n            setBurger(false)\n            setMobile(false)\n          }}\n        >\n          Все покемоны\n        </li>\n        <li onClick={() => setVisibleAbilites(!visibleAbilites)}>\n          Классы\n          {visibleAbilites && (\n            <ul>\n              {itemClass.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    setFilter(`${ability}`)\n                    setFavoritesVisible(false)\n                    setBurger(false)\n                    setMobile(false)\n                  }}\n                >\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n        <li onClick={() => setVisibleClass(!visibleClass)}>\n          Cпособности\n          {visibleClass && (\n            <ul>\n              {itemAbility.map((ability, index) => (\n                <li\n                  key={`${ability}_${index}`}\n                  onClick={() => {\n                    setFilter(`${ability}`)\n                    setFavoritesVisible(false)\n                    setBurger(false)\n                    setMobile(false)\n                  }}\n                >\n                  {ability}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default Categories\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nexport const PokemonCart: React.FC<{\n    id: number\n    name: string\n    type: string\n    image: string\n    deepState:(param: number) => void\n    favor: boolean\n    setShowHeartDescr: (param: boolean) => void \n    setMobile: (param:boolean)=> void\n   \n}> = ({id,name,type,image,deepState,favor,setShowHeartDescr,setMobile}) => (\n\n  \n        <button className= \"pokemon-cart\" onClick = {() => {\n            \n            deepState(id);\n            setMobile(true);\n            if(favor) {\n                setShowHeartDescr(false);\n            } else {\n                setShowHeartDescr(true);\n            }\n          \n        }}>\n           <div><span>№{id}</span></div>\n           <div ><img src={image} alt=\"pokemon\" /></div>\n            <div>\n                <strong className = \"pokemon-cart__name\"> {name}</strong>\n                \n            </div>\n            \n           <div>Class: {type}</div>\n               {favor && <div className = \"pokemon-cart__heart \"  ><img src={heart} alt=\"like\" / ></div>}\n              \n        </button>\n            \n    \n)\n\nexport default PokemonCart\n","import React from 'react'\nimport PokemonCart from './PokemonCart'\n\nimport {IPoki,IPokiFavor} from \"../../interface\";\n\n\nexport const SelectItems:React.FC<{\n  pokemonsList:IPoki[]\n  deepState: (param: number) => void\n  filter:string\n  favorites: IPokiFavor[]\n  favoritesVisible: boolean\n  setShowHeartDescr: (param:boolean) => void\n  setMobile: (param:boolean)=> void\n  mobile:boolean\n}>  = ({ pokemonsList, deepState, filter,favorites,favoritesVisible,setShowHeartDescr,setMobile,mobile}) => {\n  const [q, setQ] = React.useState('') // это для поискового запроса\n  const [searchParam] = React.useState(['name']) // задача массива нужных нам данных в АПИ\n\n  function search(pokemonsList:IPoki[]) {\n    // eslint-disable-next-line\n    return pokemonsList.filter((pokemonsList:any) => {\n      if (\n        pokemonsList.types[0].type.name === filter ||\n        pokemonsList.abilities[0].ability.name === filter\n      ) {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      } else if (filter === 'All') {\n        return searchParam.some((newItem) => {\n          return (\n            pokemonsList[newItem]\n              .toString()\n              .toLowerCase()\n              .indexOf(q.toLowerCase()) > -1\n          )\n        })\n      }})}\n\n      function renderFavorOrItems() {\n\n        if(favoritesVisible) {\n            if(favorites.length > 0) {\n            return favorites.map((pokemon:IPokiFavor,index:number) => (\n              <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.image}\n              type={pokemon.type}\n              key={index}\n              deepState={deepState}\n              favor={pokemon.favor}\n              setShowHeartDescr  = {setShowHeartDescr}\n              setMobile = {setMobile}\n           \n            />\n            ))\n            } else { return <div> У вас тут пусто :(</div>}\n        } else {\n          return search(pokemonsList).map((pokemon:IPoki,index:number) => (\n            <PokemonCart\n              id={pokemon.id}\n              name={pokemon.name}\n              image={pokemon.sprites.other.dream_world.front_default}\n              type={pokemon.types[0].type.name}\n              key={index}\n              deepState={deepState}\n              favor={pokemon.favor}\n              setShowHeartDescr  = {setShowHeartDescr }\n              setMobile = {setMobile}\n             \n            />\n          ))\n        }\n      }\n  \n\n\n  return (\n    <div className={mobile? \"selectItems mobile\" : \"selectItems\"} >\n      <div className=\"search-wrapper\">\n        <label htmlFor=\"search-form\">\n          <input\n            type=\"search\"\n            name=\"search-form\"\n            id=\"search-form\"\n            className=\"search-input\"\n            placeholder=\"Search for...\"\n            value={q}\n            onChange={(e) => setQ(e.target.value)}\n          />\n        </label>\n      </div>\n\n      {renderFavorOrItems()}\n    </div>\n  )\n}\n\nexport default SelectItems\n","import React from 'react'\nimport heart from '../../assets/Heart1.png'\n\nimport { IPoki } from '../../interface'\n\nexport const PokemonDescription: React.FC<{\n  id: number\n  name: string\n  image: string\n  type: string\n  ability: string\n  abilityDescr: string\n  favorites: (param: any) => void\n  showHeartDescr: boolean\n  setShowHeartDescr: (param: boolean) => void\n  allDescr: IPoki\n  mobile: boolean\n  setMobile: (param: boolean) => void\n}> = ({\n  id,\n  name,\n  image,\n  type,\n  ability,\n  abilityDescr,\n  favorites,\n  showHeartDescr,\n  setShowHeartDescr,\n  allDescr,\n  mobile,\n  setMobile,\n}) => {\n  function addOrDeleteFavor(params: boolean) {\n    if (params) {\n      favorites((currentList: [{}]) => [\n        ...currentList,\n        { id: id, name: name, image: image, type: type, favor: true },\n      ])\n      setShowHeartDescr(!params)\n    } else {\n      const todos = JSON.parse(localStorage.getItem('poki')!)\n\n      todos.forEach((item: IPoki, index: number) => {\n        if (item.id === id) {\n          todos.splice(index, 1)\n        }\n      })\n      favorites(todos)\n      setShowHeartDescr(!params)\n      allDescr.favor = false\n    }\n  }\n  return (\n    <div>\n      <div className={mobile ? 'view-description__mobile' : 'view-description'}>\n        <div className=\"view-description__name\">{name}</div>\n        <div className=\"view-description__image\">\n          <img src={image} alt=\"\" />\n        </div>\n        <div className=\"view-description__type\">Class:{type}</div>\n        <div className=\"view-description__ability\">\n          Ability: <span>{ability}</span>\n        </div>\n        <div className=\"view-description__abilityDescr\"> {abilityDescr}</div>\n        <div className=\"view-description__heart\">\n          <div onClick={() => addOrDeleteFavor(showHeartDescr)}>\n            {\n              <img\n                className={\n                  allDescr.favor\n                    ? 'view-description__heart--active'\n                    : 'view-description__heart--noactive'\n                }\n                src={heart}\n                alt=\"heart\"\n                onClick={() => {\n                  allDescr.favor = true\n                }}\n              />\n            }\n          </div>\n          <div className=\"view-description__back\">\n            <span\n              onClick={() => {\n                setMobile(false)\n              }}\n            >\n              Назад\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default PokemonDescription\n","import React from 'react'\nimport PokemonDescription from './PokemonDescription'\n\n\nimport {IPoki} from \"../../interface\";\n\nexport const View: React.FC<{\n  myState:any\n  pokiDescription:IPoki\n  favorites: ()=> void\n  showHeartDescr:boolean\n  setShowHeartDescr: (param:boolean) => void\n  mobile: boolean\n  setMobile: (param:boolean) => void\n\n}> =({myState,pokiDescription,favorites,showHeartDescr,setShowHeartDescr,mobile,setMobile}) => {\n\n\n  return (\n\n    <div  className = \"view\" >\n     { myState &&\n        <PokemonDescription\n        favorites = {favorites}\n        allDescr = {pokiDescription}\n        ability = {pokiDescription.abilities[0].ability.name}\n        abilityDescr = {pokiDescription.abildesr[1].effect}\n        id = {pokiDescription.id}\n        name = {pokiDescription.name}\n        image = {pokiDescription.sprites.other.dream_world.front_default}\n        type = {pokiDescription.types[0].type.name}\n        showHeartDescr = {showHeartDescr}\n        setShowHeartDescr = {setShowHeartDescr}\n        mobile = {mobile}\n        setMobile = {setMobile}\n        />\n      }\n    </div>\n  )\n\n}\n\nexport default View\n","import { useState } from 'react';\n\nexport const useLocalStorage = (\n    key: string,\n    initialValue: any,\n ) => {\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = (value:any) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useState } from 'react'\nimport Header from './Header'\nimport Categories from './Categories'\nimport SelectItems from './SelectItems'\nimport View from './View'\nimport useLocalStorage from './useLocalStorage'\n\nimport { IPoki } from '../../interface'\n\nexport const Container: React.FC<{\n  pokemonsList: IPoki[]\n}> = ({ pokemonsList }) => {\n  const [myState, setMyState] = useState<any>()\n  const [filter, setFilter] = useState('All')\n\n  const [mobile, setMobile] = useState(false)\n\n  const [favoritesVisible, setFavoritesVisible] = useState(false)\n\n  const [favorites, setFavorites] = useLocalStorage('poki', [])\n\n  const [showHeartDescr, setShowHeartDescr] = useState(true)\n  const [burger, setBurger] = useState(false)\n\n  return (\n    <div className=\"container\">\n      <Header burger={burger} setBurger={setBurger} />\n      <div className=\"wrapper\">\n        <Categories\n          setFilter={setFilter}\n          setFavoritesVisible={setFavoritesVisible}\n          burger={burger}\n          setBurger={setBurger}\n          setMobile={setMobile}\n          itemClass={['grass', 'normal', 'fire', 'water', 'bug']}\n          itemAbility={[\n            'overgroth',\n            'blaze',\n            'shield-dust',\n            'shed-skin',\n            'compound-eyes',\n            'swarm',\n            'keen-eye',\n            'run-away',\n            'torrent',\n          ]}\n        />\n        <SelectItems\n          pokemonsList={pokemonsList}\n          deepState={setMyState}\n          filter={filter}\n          favorites={favorites}\n          favoritesVisible={favoritesVisible}\n          setShowHeartDescr={setShowHeartDescr}\n          setMobile={setMobile}\n          mobile={mobile}\n        />\n        <View\n          myState={myState}\n          pokiDescription={pokemonsList[myState - 1]}\n          favorites={setFavorites}\n          showHeartDescr={showHeartDescr}\n          setShowHeartDescr={setShowHeartDescr}\n          mobile={mobile}\n          setMobile={setMobile}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Container\n","import React, {useEffect,useState} from 'react'\nimport Container from '../Container/Container'\n\nimport {IPoki} from \"../../interface\";\n\n\n\n\nexport const App:React.FC = () => {\n\n  const [allPokemons, setAllPokemons] = useState<IPoki[]>([]);\n  const [loadMore, setLoadMore] = useState('https://pokeapi.co/api/v2/pokemon?limit=20');\n\n  const getAllPokemons = async () => {\n    const res = await fetch(loadMore);\n    const data = await res.json();\n\n    setLoadMore(data.next);\n\n    async function createPokemonObject(results:IPoki[]) {\n      results.forEach(async pokemon => {\n        const res = await fetch(`https://pokeapi.co/api/v2/pokemon/${pokemon.name}`);\n        const data = await res.json();\n\n        const resAbility = await fetch(\n          `https://pokeapi.co/api/v2/ability/${data.abilities[0].ability.name}`,\n        );\n        const dataAbility = await resAbility.json();\n        const dataAbilityDescr = dataAbility.effect_entries;\n\n        data.abildesr = dataAbilityDescr;\n\n        setAllPokemons(currenList => [...currenList, data]);\n      });\n    }\n    \n    createPokemonObject(data.results);\n    \n  };\n\n \n  allPokemons.sort((a, b) => a.id - b.id);\n\n  useEffect(() => {\n    getAllPokemons();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  function checkFavorPoki() {\n    const a = JSON.parse(localStorage.getItem('poki')!);\n    let favorPoki:number[] = [];\n\n    if (a) {\n      a.forEach((item:any, index:number) => {\n        favorPoki[index] = item.id;\n      });\n\n      allPokemons.forEach(item => {\n        if (favorPoki.includes(item.id)) {\n          item.favor = true;\n        }\n      });\n    }\n  }\n \n  checkFavorPoki();\n \n\n  return (\n    <div className=\"App\">\n      <Container pokemonsList={allPokemons} />\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}